{"version":3,"sources":["../js/file_uploader.js","../js/_init.js","../js/_create_uploader.js","../js/_create_item.js","../js/_set_listeners.js","../js/_send_files.js","../js/_build_hidden_fields.js","../js/_create_info_text.js","../js/_set_options.js","../js/_funcs_and_params.js"],"names":["FileUploader2","upl","isSuitableBrowser","navigator","userAgent","indexOf","appVersion","div","document","createElement","window","init","user_global_options","global_options","setOptions","css","head","insertAdjacentHTML","querySelectorAll","data_attributes","fupl_selector","forEach","upl_element","element_all_dataset","dataset","fupl_dataset","fupl_options","JSON","parse","element","uploader_url","Error","filetype","toLowerCase","Object","keys","mimetypes","e","console","error","json_params","i","item","concat","log","createUploader","silent_degradation","alert","alert_messages","unsuitable_browser","_input","querySelector","original_label","accept_attr","accept_params","accept","split","map","trim","getAttribute","_toConsumableArray","Set","max_filesize","parse_max_filesize","locales","_fupl_options$wrapper","_fupl_options$istance","multiple","Boolean","hasAttribute","required","_type","_mode","uploader_label_text","innerHTML","classList","add","wrapper","parentNode","insertBefore","appendChild","wrapper_extra_class","apply","uploader_add_label","_class","uploader_label_class","push","length","join","templates","main","istance_input","istance_label","istance_dd_text","istance_info_text","istance_result_wrapper","setAttribute","input_text","input_label_class","show_info_text","custom_info_text","create_info_text","values","_typeof","Array","isArray","createItem","set_has_values","setListeners","init_callback","debug","groupCollapsed","c_options","c_keys","sort","_toStringify","stringify","table","groupEnd","item_data","item_markup","fupl_item_wrapper","remove_btn","fupl_file_name","name","title","fupl_file_size","size_string","wi","he","size","parse_filesize","src","fupl_url","url","href","fupl_item","id","rel_id","item_id","loading","loading_element","addEventListener","remove","delete_varname","eventName","preventDefault","stopPropagation","element_dragover_class","files","dataTransfer","alert_api","too_much_files","sendFiles","filelist","disable_submit","modo","_form","closest","submit_btns","btn","disabled","uploadFile","current_item","img_preview","this_item","file","width","height","fupl_progress","fupl_loading_wrapper","xhr_error_message","xhr_error","replace","remove_item_on_error","click","upload_start_callback","uploader_options","Promise","resolve","reject","ajax","XMLHttpRequest","open","onload","status","response","responseText","tmp_file","upload_complete_callback","server_error","statusText","onerror","upload","alternate_loading_func","perc_loaded","Math","round","loaded","total","lengthComputable","Infinity","value","alternate_loading_progress","fileData","FormData","append","send","then","buildHiddenFields","filelist_item","idx","Date","ext","pop","type","file_format_error","maxbytes","item_parsed_size","file_size_error","feedback_size","reader","FileReader","image","Image","result","err_mes","img_w","img_exact_width_err","img_min_w","img_min_width_err","img_max_w","img_max_width_err","img_h","img_exact_height_err","img_min_h","img_min_height_err","img_max_h","img_max_height_err","img_err_start_string","readAsDataURL","errormessage","normalize_file_name","filename","converted","conversionTable","à","è","é","ì","ò","ù","À","È","É","Ì","Ò","Ù","'","|","!","\"","$","%","&","/","(",")","=","?","^","*","[","]","ç","@","#","<",">","ü","Ü","ñ","Ñ","~",":","\\","charCodeAt","charAt","hidden_fields","field_values","file_name","_key","varname","info_text","str","info_text_join_string","toUpperCase","slice","info_text_wrap_string","default_options","mes","opts","arguments","undefined","no_file","img","doc","single","reorder","reorder_varname","_len","custom_options","assign","_ret","_loop","v","auto","pdf","hasValues","items","bytes","mega","toLocaleString","maximumFractionDigits","filesize_value","unit","isNaN","substr"],"mappings":"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","sourcesContent":["/*!@preserve\n *\n * FileUploader 2.0\n * HTML5 / JS Async Uploader\n * Massimo Cassandro 2017-2019\n *\n */\n\n//* eslint no-console: 0, no-unused-vars: 0, no-empty:  0 */\n/* exported FileUploader2 */\n\n/*\n@codekit-append '_funcs_and_params.js'\n@codekit-append '_set_options.js'\n@codekit-append '_create_info_text.js'\n@codekit-append '_reorder.js'\n@codekit-append '_build_hidden_fields.js'\n@codekit-append '_send_files.js'\n@codekit-append '_set_listeners.js'\n@codekit-append '_create_item.js'\n@codekit-append '_create_uploader.js'\n\n@codekit-append '_init.js'\n\n*/\n\"use strict\";\nvar FileUploader2 = (function () {\n\n  let upl = {};\n\n  return upl;\n})();\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  // VARIABILI E METODI PRIVATI\n  /*\n    isSuitableBrowser\n    Verifica che il browser sia in grado di gestire le funzionalità richieste.\n    Restituisce `true` o `false`\n  */\n  const isSuitableBrowser = () => {\n    // Eliminazione IE\n    if( navigator.userAgent.indexOf('MSIE') !== -1 ||\n    navigator.appVersion.indexOf('Trident/') > -1 ||\n    navigator.userAgent.indexOf('Trident/') > -1 ){\n      return false;\n    }\n\n    var div = document.createElement( 'div' );\n    return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) )\n      && 'FormData' in window\n      && 'FileReader' in window\n      && 'fetch' in window;\n  };\n\n\n  /*\n    init\n    Seleziona gli elementi con l'attributo `fupl_selector` e avvia FileUploader\n    `user_global_options` è l'oggetto istanziato al momento di avviare FileUploader2,\n    ha la stessa struttura di `default_options` (definito in _set_options.js)\n    e può sovrascrivere ogni suo elemento\n  */\n  upl.init = (user_global_options) => {\n\n    const global_options = upl.setOptions(user_global_options);\n\n    // verifica che il browser sia compatibile\n    if( !isSuitableBrowser() ) {\n      if(!global_options.silent_degradation) {\n        alert(global_options.alert_messages.unsuitable_browser);\n      }\n      return;\n    }\n\n    // caricamento CSS\n    if(global_options.css) {\n      document.head.insertAdjacentHTML('beforeend',\n        '<link rel=\"stylesheet\" href=\"' + global_options.css + '\" type=\"text/css\" media=\"all\">'\n      );\n    }\n\n    // istanze uploader\n    //---------------------------------------------------\n    document.querySelectorAll('[data-' + upl.data_attributes.fupl_selector + ']').forEach( upl_element => {\n      /*\n        merge dei parametri inseriti tramite attributi `data`, in cui:\n\n        * `upl_element.dataset`:\n            tutti gli attributi inseriti singolarmente (es. data-filetype=\"img\")\n\n        * `upl_element.dataset[upl.data_attributes.fupl_selector]`:\n            attributi inseriti tramite json assegnato a `data- + 'upl.data_attributes.fupl_selector'`\n            (es data-file_uploader2='{\"filetype\":\"img\"}')\n\n        In caso di conflitto prevalgono gli ultimi\n      */\n\n      let element_all_dataset = upl_element.dataset,\n      fupl_dataset = upl_element.dataset[upl.data_attributes.fupl_selector],\n      fupl_options = {};\n\n      if(element_all_dataset === '') {\n        element_all_dataset = {};\n      }\n\n      if(fupl_dataset === '') {\n        fupl_dataset = {};\n      } else {\n        fupl_dataset = JSON.parse(fupl_dataset);\n      }\n\n      fupl_options = upl.setOptions(\n        global_options,\n        fupl_dataset,\n        element_all_dataset\n      );\n\n      // cancella la chiave `upl.data_attributes.fupl_selector`\n      // (al solo scopo di ridurre la confusione)\n      delete fupl_options[upl.data_attributes.fupl_selector];\n\n      // aggiunta dell'elemento stesso ad  `fupl_options`:\n      fupl_options.element = upl_element;\n\n      // controllo parametri e avvio uploader\n      try {\n        //  controllo url\n        if( !fupl_options.uploader_url ) {\n          throw new Error( \"Parametro `uploader_url` non impostato\" );\n        }\n\n        //  controllo parametro filetype\n        fupl_options.filetype = fupl_options.filetype.toLowerCase();\n        if( Object.keys(upl.mimetypes).indexOf(fupl_options.filetype) === -1 ) {\n          throw new Error( \"Parametro `filetype` non corretto\" );\n        }\n      } catch(e) {\n        console.error( e );// eslint-disable-line\n      }\n\n      // parametri che devono essere array e che potrebbero essere presenti\n      // come attributi data (stringa)\n      const json_params = [\n        'input_text',\n        'templates',\n        'info_text_wrap_string',\n        'values'\n      ];\n      json_params.forEach(item => {\n        try {\n          if(typeof fupl_options[item] === 'string' ) {\n            fupl_options[item] = JSON.parse(fupl_options[item]);\n          }\n        } catch(e) {\n          console.error(`L'elemento “${item}” non è un json valido`); // eslint-disable-line\n          console.log(fupl_options.element); // eslint-disable-line\n          console.error( e );// eslint-disable-line\n        }\n      });\n\n      // interpretazione automatica di tutti i parametri booleani o null\n      for(let i in fupl_options) {\n        if(typeof fupl_options[i] === 'string' &&\n          ['true', 'false', 'null'].indexOf(fupl_options[i].toLowerCase) !== -1) {\n          fupl_options[i] = JSON.parse(fupl_options[i]);\n        }\n      }\n\n\n      new upl.createUploader(fupl_options);\n\n    }); // end document.querySelectorAll(fupl_selector).forEach\n  }; // end upl.init\n\n  return upl;\n\n})(FileUploader2 || {});\n\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  upl.createUploader = (fupl_options) => {\n\n    // eventuale campo input e relativo tag label\n    let _input = fupl_options.element.querySelector('input[type=\"file\"]'),\n      original_label = fupl_options.element.querySelector('label');\n\n\n    // implementazione eventuali parametro/attributo `accept`\n    if( fupl_options.filetype === 'auto' ) {\n\n      let accept_attr = [],\n      accept_params = [];\n\n      if( fupl_options.accept !== null ) {\n        accept_params = fupl_options.accept\n          .split(',').map( item => item.trim() );\n      }\n\n      if(_input && _input.getAttribute('accept') ) {\n        accept_attr = _input.getAttribute('accept')\n          .split(',').map( item => item.trim() );\n      }\n\n      // https://www.peterbe.com/plog/merge-two-arrays-without-duplicates-in-javascript\n      fupl_options.accept = [...new Set([...accept_params, ...accept_attr])];\n\n    } else {\n      fupl_options.accept = upl.mimetypes[fupl_options.filetype];\n    }\n\n    // elaborazione max_filesize\n    let max_filesize = upl.parse_max_filesize(fupl_options.max_filesize, fupl_options.locales);\n    if( max_filesize === false ) {\n      throw new Error( '\"' + fupl_options.max_filesize + '\" non è un valore corretto per `max_filesize`');\n    } else {\n      fupl_options.max_filesize = max_filesize;\n    }\n\n    // parametro o attributo multiple\n    fupl_options.multiple = Boolean(fupl_options.multiple ||\n      (_input && _input.hasAttribute('multiple') ));\n\n    // parametro o attributo required\n    fupl_options.required = Boolean(fupl_options.required ||\n      (_input && _input.hasAttribute('required') ));\n\n\n    // tipologia generale dell'uploader (img o doc) e modalità\n    // selezione file\n    fupl_options._type = fupl_options.filetype === 'img'? 'img' : 'doc';\n    fupl_options._mode = fupl_options.multiple? 'multiple' : 'single';\n\n    // testo label (da tag o parametro uploader_label_text)\n    if( !fupl_options.uploader_label_text && original_label) {\n      fupl_options.uploader_label_text = original_label.innerHTML;\n    }\n    // caso in cui sia presente nessun valore\n    if ( !fupl_options.uploader_label_text ) {\n      fupl_options.uploader_label_text = '__label non presente__';\n    }\n\n    // aggiunta della classe principale\n    fupl_options.element.classList.add(\"fupl\");\n\n    // aggiunta wrapper\n    fupl_options.wrapper = document.createElement('div');\n    fupl_options.element.parentNode.insertBefore(fupl_options.wrapper, fupl_options.element);\n    fupl_options.wrapper.appendChild(fupl_options.element);\n    fupl_options.wrapper.classList.add(\"fupl-wrapper\");\n    fupl_options.wrapper.classList.add(\"fupl-type-\" + fupl_options._type );\n    if(fupl_options.multiple) {\n      fupl_options.wrapper.classList.add(\"fupl-multiple\");\n    }\n    // aggiunta eventuali classi personalizzate\n    if( fupl_options.wrapper_extra_class ) {\n      fupl_options.wrapper.classList.add( ...fupl_options.wrapper_extra_class.split(' ') );\n    }\n\n    // aggiunta label uploader\n    if( fupl_options.uploader_add_label ) {\n      let _class = ['fupl-label'];\n      if( fupl_options.uploader_label_class ) {\n        _class.push(fupl_options.uploader_label_class);\n      }\n      if( fupl_options.required ) {\n        _class.push('required');\n      }\n      fupl_options.element.insertAdjacentHTML('beforebegin',\n        '<div class=\"fupl-label-wrapper\">' +\n          '<label' + (_class.length? ' class=\"' + _class.join(' ') + '\"' : '') + '>' +\n            fupl_options.uploader_label_text +\n          '</label>' +\n        '</div>'\n      );\n      fupl_options.wrapper.classList.add( 'fupl-has-label' );\n    }\n\n    // aggiunta template uploader\n    fupl_options.element.innerHTML = fupl_options.templates.main;\n\n    fupl_options.istance_input = fupl_options.element.querySelector('.fupl-panel input[type=\"file\"]');\n    fupl_options.istance_label = fupl_options.element.querySelector('.fupl-panel label');\n    fupl_options.istance_dd_text = fupl_options.element.querySelector('.fupl-panel .fupl-dd-text');\n    fupl_options.istance_info_text = fupl_options.element.querySelector('.fupl-panel .fupl-info-text');\n    fupl_options.istance_result_wrapper = fupl_options.element.querySelector('.fupl-result');\n\n\n    // inserimento testi e attributi\n    // if( fupl_options.required ) {\n    //   fupl_options.istance_input.setAttribute('required', '');\n    // }\n    if( fupl_options.multiple ) {\n      fupl_options.istance_input.setAttribute('multiple', '');\n    }\n    if( fupl_options.accept !== null ) {\n      fupl_options.istance_input.setAttribute('accept', fupl_options.accept.join(','));\n    }\n\n    // aggiunta attributo data al wrapper per segnalare il required\n    if( fupl_options.required ) {\n      fupl_options.wrapper.dataset[upl.data_attributes.required] = 'true';\n    }\n\n    fupl_options.istance_label.insertAdjacentHTML('beforeend',\n      fupl_options.input_text[fupl_options._type][fupl_options._mode][0]\n    );\n    if(fupl_options.input_label_class) {\n      fupl_options.istance_label.classList.add(...fupl_options.input_label_class.split(' '));\n    }\n    fupl_options.istance_dd_text.innerHTML = fupl_options.input_text[fupl_options._type][fupl_options._mode][1];\n\n    // info text\n    if( fupl_options.show_info_text ) {\n      if(fupl_options.custom_info_text) {\n        fupl_options.istance_info_text.innerHTML = fupl_options.custom_info_text;\n      } else {\n        fupl_options.istance_info_text.innerHTML = upl.create_info_text(fupl_options);\n      }\n    }\n\n    // aggiunta valori\n    // se values esiste ma è un oggetto, viene inserito in un array (non è garanzia di funzionamento)\n    // se è un altro tipo di variabile viene generato un errore\n    if(fupl_options.values) {\n      if(typeof fupl_options.values === 'object') {\n        if(!Array.isArray(fupl_options.values)) {\n          fupl_options.values = [fupl_options.values];\n        }\n      } else {\n        console.error(\"Il parametro `values` non è corretto\"); // eslint-disable-line\n      }\n    }\n\n    if( fupl_options.values && fupl_options.values.length ) {\n\n      fupl_options.values.forEach( item => {\n        upl.createItem(item, fupl_options);\n      });\n\n    }\n    upl.set_has_values(fupl_options);\n\n    // gestione aggiunta nuovi elementi\n    upl.setListeners(fupl_options);\n\n\n    // esecuzione init_callback, se presente\n    if( fupl_options.init_callback !== null ) {\n      fupl_options.init_callback( fupl_options );\n    }\n\n\n    //debug\n    if( fupl_options.debug ) {\n      /* eslint-disable */\n      console.groupCollapsed('FileUploader options');\n      // creazione di un oggetto bidimensinale per\n      // semplificare la rappresentazione in tabella\n      let c_options = {},\n      c_keys = Object.keys(fupl_options);\n      c_keys.sort();\n      c_keys.forEach(item => {\n        let _toStringify = typeof fupl_options[item] === 'object' &&\n        fupl_options[item] !== null &&\n          item !== 'element';\n        c_options[item] = _toStringify ? JSON.stringify(fupl_options[item], null, ' ') : fupl_options[item];\n      });\n      console.table(c_options);\n      console.groupCollapsed('fupl_options');\n        console.log(fupl_options);\n      console.groupEnd();\n      console.groupEnd();\n      /* eslint-enable */\n    } // end if debug\n\n\n  }; // end upl.createUploader\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n\n  /*\n  Aggiunge un elemento a fupl_options.istance_result_wrapper\n  e imposta i necessari listeners\n\n  item_data è l'oggetto con i dati dell'elemento:\n\n  {\n    id    → identificativo univoco del file (può essere anche il percorso sul server)\n    name  → nome del file\n    url   → url per eventuale tag <a> presente nell'elemento (se immagine può essere assente o null)\n    src   → attributo `src` obbligatorio se immagine, oppure assente o null\n    wi    → larghezza in px se immagine oppure assente o null\n    he    → altezza in px se immagine oppure assente o null\n    size  → dimensione in bytes\n    loading → true se se si tratta di un elemento in fase di upload\n    [...] → eventuali campi aggiuntivi specifici dell'istanza\n  }\n\n  */\n\n  upl.createItem = (item_data, fupl_options) => {\n\n    try {\n\n      let item_markup = fupl_options.templates[fupl_options._type][fupl_options._mode];\n      if( item_markup === null && fupl_options._mode === 'multiple' ) {\n        item_markup = fupl_options.templates[fupl_options._type]['single'];\n      }\n\n      let fupl_item_wrapper = document.createElement('div'); // wrapper da rimuovere al momento dell'inserimento\n      fupl_item_wrapper.innerHTML = item_markup;\n\n      // aggiunta pulsante rimozione\n      fupl_item_wrapper.querySelector('.fupl-remove').innerHTML = fupl_options.templates.remove_btn;\n\n\n\n      /*\n        aggiunta dati specifici dell'elemento:\n\n        elementi interni a fupl-item:\n          .fupl-file-name\n          .fupl-file-size\n          .fupl-img →  img\n          .fupl-img → a.href\n          .fupl-doc →  a.href\n\n      */\n\n      // nome file\n      let fupl_file_name = fupl_item_wrapper.querySelector('.fupl-file-name');\n      if(fupl_file_name && item_data.name ) {\n        fupl_file_name.innerHTML = item_data.name;\n        fupl_file_name.title = item_data.name;\n      }\n\n      // info dimensioni\n      let fupl_file_size = fupl_item_wrapper.querySelector('.fupl-file-size');\n      if(fupl_file_size ) {\n        let size_string = '';\n        if(fupl_options._type === 'img' && item_data.wi && item_data.he) {\n          size_string = item_data.wi + '&times;' + item_data.he + '<span class=\"fupl-unit\">px</span>';\n          if(item_data.size) {\n            size_string += ' &ndash; ';\n          }\n        }\n        if(item_data.size) {\n          size_string += upl.parse_filesize(item_data.size, fupl_options.locales);\n        }\n\n        fupl_file_size.innerHTML = size_string;\n      }\n\n      // immagine\n      if( fupl_options._type === 'img' ) {\n        fupl_item_wrapper.querySelector('.fupl-img').src = item_data.src;\n      }\n\n      // url\n      let fupl_url = fupl_item_wrapper.querySelector('.fupl-url');\n      if( fupl_url && item_data.url) {\n        fupl_url.href = item_data.url;\n      }\n\n      let fupl_item = fupl_item_wrapper.querySelector('.fupl-item');\n      // id elemento per eventuale cancellazione\n      // se esiste rel_id, viene utilizzato quello\n      if(item_data.id || item_data.rel_id) {\n        fupl_item.dataset[upl.data_attributes.item_id] = item_data.rel_id? item_data.rel_id : item_data.id;\n      }\n\n      if(item_data.loading) {\n        fupl_item.classList.add('fupl-is-uploading');\n        fupl_item.insertAdjacentHTML('beforeend',\n          fupl_options.templates.loading_element\n        );\n      }\n\n      if(fupl_options._mode === 'single') {\n        fupl_options.istance_result_wrapper.innerHTML = fupl_item_wrapper.innerHTML;\n      } else {\n\n        // se non esistono elementi caricati predentemente, si svuota il div per\n        // eliminare la scritta no file\n        if( !fupl_options.istance_result_wrapper.querySelector('.fupl-item')) {\n          fupl_options.istance_result_wrapper.innerHTML = '';\n        }\n\n        fupl_options.istance_result_wrapper.insertAdjacentHTML('beforeend',\n          fupl_item_wrapper.innerHTML\n        );\n      }\n\n      // aggiunta evento trigger eliminazione elemento\n      fupl_item_wrapper = fupl_options.istance_result_wrapper.querySelector('.fupl-item:last-child');\n      fupl_item_wrapper.querySelector('.fupl-remove-trigger').addEventListener('click', () => {\n        // se l'id non è impostato si tratta di un nuovo elemento,\n        // e non va eseguita la cancellazione sul server\n        let id = fupl_item_wrapper.dataset[upl.data_attributes.item_id];\n        fupl_item_wrapper.remove();\n        if(id) {\n          fupl_options.wrapper.insertAdjacentHTML('beforeend',\n            `<input type=\"hidden\" name=\"${fupl_options.delete_varname}\" value=\"${id}\">`\n          );\n        }\n\n        // controllo se istance_result_wrapper è vuoto\n        // e impostazione di attributo e contenuti\n        upl.set_has_values(fupl_options);\n\n      });\n\n      return fupl_options.istance_result_wrapper.querySelector('.fupl-item:last-child');\n\n    } catch(e) {\n      console.error(e); // eslint-disable-line\n    }\n\n  }; // end upl.createItem\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  // https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n  upl.setListeners = (fupl_options) => {\n\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }, false);\n    });\n\n    ['dragover', 'dragenter'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, () => {\n        fupl_options.element.classList.add( fupl_options.element_dragover_class );\n      }, false);\n    });\n\n    ['dragleave', 'dragend'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, () => {\n        fupl_options.element.classList.remove( fupl_options.element_dragover_class );\n      }, false);\n    });\n\n    fupl_options.element.addEventListener('drop', (e) => {\n      fupl_options.element.classList.remove( fupl_options.element_dragover_class );\n\n      let files = e.dataTransfer.files;\n\n      if( !fupl_options.multiple && files.length > 1 ) {\n        fupl_options.alert_api(fupl_options.alert_messages.too_much_files, fupl_options);\n      } else {\n        upl.sendFiles( files, fupl_options );\n      }\n    }, false);\n\n    // selezione tramite input\n    fupl_options.istance_input.addEventListener('change', () => {\n      upl.sendFiles( fupl_options.istance_input.files, fupl_options );\n    });\n\n  }; // end upl.createItem\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  /*\n\tsendFiles\n\tEsegue i controlli impostati, quindi la chiamata ajax e produce\n\til feedback per l'utente\n\t*/\n  upl.sendFiles = (filelist, fupl_options) => {\n\n\n    /*\n    disable_submit\n    disabilita il form fino a caricamento completato\n    */\n    const disable_submit = (modo) => {\n      // modo === true → disable, false → enable\n      const _form = fupl_options.element.closest('form');\n\n      if(fupl_options.disable_submit && _form) {\n        const submit_btns = _form.querySelectorAll('[type=\"submit\"]');\n\n        submit_btns.forEach( btn => {\n          btn.disabled = modo;\n        });\n\n        //BUG il listener non viene rimosso con modo == false\n        // const submitHandler = (e) => {\n        //   e.preventDefault();\n        //   //return false;\n        // };\n        // if(modo === true) {\n        //   _form.addEventListener('submit', submitHandler);\n        // } else {\n        //   if( !fupl_options.istance_result_wrapper.querySelector('.fupl-item.fupl-is-uploading')) {\n        //     _form.removeEventListener('submit', submitHandler);\n        //   }\n        // }\n      }\n    },\n\n    /*\n    uploadFile\n    esegue l'upload Ajax\n    https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n\n    current_item contiene:\n      - `id`: id univoco dell'elemento\n      - `file`: oggetto filelist\n      - `width` e height: dimensioni in pixel dell'immagine.\n                  null se non si tratta di immagini\n      - `tmp_file`: nel caso di nuovi elementi: nome del file temporaneo\n\n    */\n    uploadFile = function ( current_item, img_preview ) {\n\n      // disabilitazione form\n      disable_submit(true);\n\n      // aggiunta elemento all'uploader\n      let this_item = upl.createItem({\n          id   : null,\n          name : current_item.file.name,\n          url  : null,\n          src  : img_preview,\n          wi   : current_item.width,\n          he   : current_item.height,\n          size : current_item.file.size,\n          loading:true\n      }, fupl_options),\n\n      fupl_progress= this_item.querySelector('.fupl-progress'),\n      fupl_loading_wrapper = this_item.querySelector('.fupl-loading'),\n\n      xhr_error_message = fupl_options.alert_messages.xhr_error.replace(/{{file_name}}/, current_item.file.name);\n\n      //console.log(this_item); // eslint-disable-line\n\n      const remove_item_on_error = () => {\n        this_item.querySelector('.fupl-remove-trigger').click();\n      };\n\n      /*\n      Funzione callback personalizzata\n      Vedi `_set_options.js` per tutti i parametri\n      */\n      if( fupl_options.upload_start_callback && typeof fupl_options.upload_start_callback === 'function') {\n        fupl_options.upload_start_callback({\n          'item'              : current_item,\n          'img_preview'       : img_preview,\n          'uploader_options'  : fupl_options\n        });\n      }\n\n      new Promise(function(resolve, reject) {\n        let ajax = new XMLHttpRequest();\n        ajax.open( 'POST', fupl_options.uploader_url, true );\n\n        ajax.onload = function() {\n\n          if( ajax.status >= 200 && ajax.status < 400 ) {\n\n            const response = JSON.parse( ajax.responseText );\n\n            /*\n              jsonResponse:\n              {\n                \"tmp_file\": \"file_temporaneo\",\n                \"error\": null\n              }\n            */\n            if(response.error) {\n\n              fupl_options.alert_api( xhr_error_message, fupl_options );\n              /* eslint-disable */\n              console.error( response.error );\n              /* eslint-enable */\n\n              reject();\n\n            } else {\n              current_item.tmp_file = response.tmp_file;\n              resolve();\n            }\n\n            /*\n            Funzione callback personalizzata\n            Vedi `_set_options.js` per tutti i parametri\n            */\n            if( fupl_options.upload_complete_callback && typeof fupl_options.upload_complete_callback === 'function') {\n              fupl_options.upload_complete_callback({\n                'item'          : current_item,\n                'server_error'  : response.error,\n                'fupl_options'  : fupl_options\n              });\n            }\n\n\n          } else {\n            fupl_options.alert_api( xhr_error_message, fupl_options );\n            /* eslint-disable */\n            console.error( ajax.status, ajax.statusText );\n            console.error( ajax.responseText );\n            /* eslint-enable */\n          }\n\n          reject();\n        };\n\n        ajax.onerror = function() {\n          fupl_options.alert_api( xhr_error_message, fupl_options );\n          /* eslint-disable */\n          if(fupl_options.debug) {\n            console.error( ajax.status,  ajax.statusText );\n            console.error( ajax.responseText );\n          }\n          /* eslint-enable */\n\n          reject();\n        };\n\n        ajax.upload.addEventListener('progress', function (e) {\n          if( fupl_options.alternate_loading_func &&\n            typeof fupl_options.alternate_loading_func === 'function') {\n              fupl_options.alternate_loading_func(e, fupl_options);\n\n          } else {\n            let perc_loaded = Math.round(e.loaded / e.total * 100.0) || 0;\n\n            //console.log(e.loaded ,e.total, perc_loaded); // eslint-disable-line\n            if(fupl_progress) {\n              if(e.lengthComputable) {\n                perc_loaded = perc_loaded === Infinity? 100 : perc_loaded;\n                this_item.querySelector('.fupl-progress').value = perc_loaded;\n              } else {\n                fupl_loading_wrapper.innerHTML = fupl_options.templates.alternate_loading_progress;\n                fupl_progress = null;\n              }\n            }\n          }\n        }, false);\n\n\n        let fileData = new FormData();\n        fileData.append('file', current_item.file);\n        ajax.send( fileData );\n      }) // end promise\n      .then(\n        // resolve\n        function (  ) {\n          //console.log('resolve'); // eslint-disable-line\n          this_item.classList.remove('fupl-is-uploading');\n          this_item.querySelector('.fupl-loading').remove(); // elemento loading\n\n          this_item.insertAdjacentHTML('beforeend',\n            upl.buildHiddenFields(current_item, fupl_options)\n          );\n\n          upl.set_has_values(fupl_options);\n\n          //Se non ci sono altri elemento in caricamento, disable_submit viene annullato\n          disable_submit(false);\n\n        },\n        //reject\n        function (  ) {\n          //console.log('reject'); // eslint-disable-line\n          remove_item_on_error();\n          upl.set_has_values(fupl_options);\n        }\n      );\n\n    };\n\n    if( filelist.length ) {\n\n      // https://stackoverflow.com/questions/38362231/\n      //how-to-use-promise-in-foreach-loop-of-array-to-populate-an-object\n      [...filelist].forEach(function (filelist_item, idx) {\n        try {\n\n          let current_item = {\n            id: 'fupl_item_' + (+new Date()) + '_' + idx, // id unico\n            file: filelist_item,\n            width: null,\n            height: null,\n            tmp_file: null\n          };\n\n          // controllo filetype (per drag&drop e browser che non supportano accept)\n          if( fupl_options.accept.length ) {\n            let ext = filelist_item.name.split('.').pop().toLowerCase();\n            if( fupl_options.accept.indexOf( filelist_item.type ) === -1 &&\n              fupl_options.accept.indexOf( '.' + ext ) === -1) {\n\n              throw fupl_options.alert_messages.file_format_error\n                .replace(/{{file_name}}/, filelist_item.name );\n            }\n          } // end controllo filetype\n\n          // controllo maxfilesize\n          if( fupl_options.max_filesize !== null ) {\n            if( filelist_item.size > fupl_options.max_filesize.maxbytes ) {\n              let item_parsed_size = upl.parse_filesize(filelist_item.size, fupl_options.locales);\n\n              throw fupl_options.alert_messages.file_size_error\n                .replace(/{{file_name}}/, filelist_item.name )\n                .replace(/{{file_size}}/, item_parsed_size )\n                .replace(/{{allowed_size}}/, fupl_options.max_filesize.feedback_size );\n\n            }\n          } // end controllo maxfilesize\n\n          // analisi immagine e caricamento\n          if(fupl_options.filetype === 'img') {\n\n            let reader  = new FileReader();\n            reader.addEventListener(\"load\", function () {\n\n              let image = new Image();\n              image.src = reader.result;\n              image.addEventListener(\"load\", function () {\n\n                let err_mes = [];\n                current_item.width=image.width;\n                current_item.height=image.height;\n\n                if( fupl_options.img_w && image.width !== fupl_options.img_w ) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_exact_width_err\n                      .replace(/{{image_dimension}}/, image.width)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_w)\n                  );\n\n                } else if(fupl_options.img_min_w && image.width < fupl_options.img_min_w) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_min_width_err\n                      .replace(/{{image_dimension}}/, image.width)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_min_w)\n                  );\n\n                } else if(fupl_options.img_max_w && image.width > fupl_options.img_max_w) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_max_width_err\n                      .replace(/{{image_dimension}}/, image.width)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_max_w)\n                  );\n                }\n\n                if (fupl_options.img_h && image.height !== fupl_options.img_h) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_exact_height_err\n                      .replace(/{{image_dimension}}/, image.height)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_h)\n                  );\n\n                } else if(fupl_options.img_min_h && image.height < fupl_options.img_min_h) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_min_height_err\n                      .replace(/{{image_dimension}}/, image.height)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_min_h)\n                  );\n\n                } else if(fupl_options.img_max_h && image.height > fupl_options.img_max_h) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_max_height_err\n                      .replace(/{{image_dimension}}/, image.height)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_max_h)\n                  );\n                }\n\n                if( err_mes.length ) {\n                  fupl_options.alert_api(\n                    fupl_options.alert_messages.img_err_start_string\n                    .replace(/{{file_name}}/, filelist_item.name ) + '<br>' +\n                    '<ul><li>' + err_mes.join('</li><li>') + '</li></ul>',\n                  fupl_options );\n\n                } else {\n                  uploadFile( current_item, reader.result );\n                }\n\n              }, false); // end image.addEventListener(\"load\"\n\n            }, false); // end reader.addEventListener(\"load\"\n\n            reader.readAsDataURL( filelist_item );\n\n          } else { // non immagine\n            uploadFile( current_item );\n\n          } // end if image\n\n        } catch (errormessage) {\n          fupl_options.alert_api( errormessage, fupl_options );\n        }\n      }); // end foreach\n\n    } // end if( filelist.length )\n\n  }; // end upl.sendFiles\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  /*\n    elimina i caratteri ascii > 127\n    Restituisce la stringa normalizzata\n  */\n  const normalize_file_name = function (filename) {\n    let converted = \"\";\n    const conversionTable = { // Reference table Unicode vs ASCII\n      'à' : 'a', // 224\n      'è' : 'e', // 232\n      'é' : 'e', // 233\n      'ì' : 'i', // 236\n      'ò' : 'o', // 242\n      'ù' : 'u', // 249\n      'À' : 'A', // 192\n      'È' : 'E', // 200\n      'É' : 'E', // 201\n      'Ì' : 'I', // 204\n      'Ò' : 'O', // 210\n      'Ù' : 'U', // 217\n      \"'\" : '_', // 39\n      '|' : '_', // 124\n      '!' : '_', // 33\n      '\"' : '_', // 34\n      '$' : '_', // 36\n      '%' : '_', // 37\n      '&' : '_', // 38\n      '/' : '_', // 47\n      '(' : '_', // 40\n      ')' : '_', // 41\n      '=' : '_', // 61\n      '?' : '_', // 63\n      '^' : '_', // 94\n      '*' : '_', // 42\n      '[' : '_', // 91\n      ']' : '_', // 93\n      'ç' : 'c', // 231\n      '@' : '_', // 64\n      '#' : '_', // 35\n      '<' : '_', // 60\n      '>' : '_', // 62\n      'ü' : 'u', // 252\n      'Ü' : 'U', // 220\n      'ñ' : 'n', // 241\n      'Ñ' : 'N', // 209\n      '~' : '_', // 126\n      ':' : '_',\n      '\\\\' : '_'\n    };\n\n    for(var i = 0; i < filename.length; i++) {\n      if( filename[i] in conversionTable) {\n        converted += conversionTable[filename[i]];\n\n      } else if(filename.charCodeAt(i) === 768 || filename.charCodeAt(i) === 769 ) { // accento grave e accento acuto\n        converted += '';\n\n      } else if(filename.charCodeAt(i) > 127 ) {\n        converted += '_';\n\n      } else {\n        converted += filename.charAt(i);\n      }\n    }\n\n    return converted.replace(/ /g, '_').replace(/_+/g, '_');\n  };\n\n  /*\n  buildHiddenFields\n  genera i campi hidden con i valori da restituire al server.\n  Restituisce la stringa dei campi hidden\n  */\n  upl.buildHiddenFields = (current_item, fupl_options) => {\n\n    let hidden_fields = '',\n    field_values = {\n      'tmp_file'  : current_item.tmp_file,\n      'file_name' : normalize_file_name(current_item.file.name),\n      'size'      : current_item.file.size,\n      'type'      : current_item.file.type\n    };\n\n    if(fupl_options._type === 'img') {\n      field_values.width = current_item.width;\n      field_values.height = current_item.height;\n    }\n\n    for (let _key in field_values) {\n      hidden_fields += '<input type=\"hidden\" '+\n        'name=\"' + fupl_options.varname + '[' + current_item.id +'][' + _key + ']\" '+\n        'value=\"' + field_values[_key] +'\">';\n    }\n\n    return '<div class=\"fupl-hiddens\">' + hidden_fields + '</div>';\n\n  };\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n  \"use strict\";\n\n\n  /**\n\t * create_info_text\n\t * (funzione) Genera la stringa riepilogativa delle limitazioni da rispettare\n\t * per la selezione dei file\n\t *\n   * - Restituisce la stringa informativa\n\t */\n\tupl.create_info_text = fupl_options => {\n    let info_text = [];\n\n    if( fupl_options.filetype === 'img' ) {\n      info_text.push( 'immagini in formato <strong>JPEG</strong>, <strong>PNG</strong>, <strong>GIF</strong> o <strong>WEBP</strong>' );\n\n      if( fupl_options.img_w && fupl_options.img_h ) {\n        info_text.push( 'dimensioni: <strong>' +  fupl_options.img_w + '&times;' + fupl_options.img_h + 'px</strong>');\n\n      } else {\n\n        if(fupl_options.img_w && fupl_options.img_h && fupl_options.img_w === fupl_options.img_h) {\n          info_text.push( 'larghezza e altezza <strong>' +  fupl_options.img_h + 'px</strong>');\n\n        } else if(fupl_options.img_min_w && fupl_options.img_min_h && fupl_options.img_min_w === fupl_options.img_min_h) {\n          info_text.push( 'larghezza e altezza non inferiori a <strong>' +  fupl_options.img_min_w + 'px</strong>');\n\n        } else if(fupl_options.img_max_w && fupl_options.img_max_h && fupl_options.img_max_w === fupl_options.img_max_h) {\n          info_text.push( 'larghezza e altezza non superiori a <strong>' +  fupl_options.img_max_w + 'px</strong>');\n\n        } else {\n\n          if( fupl_options.img_w ) {\n            info_text.push( 'larghezza <strong>' +  fupl_options.img_w + 'px</strong>');\n\n          } else if( fupl_options.img_min_w && fupl_options.img_max_w ) {\n            info_text.push( 'larghezza compresa tra <strong>' +  fupl_options.img_min_w + 'px</strong> e <strong>' + fupl_options.img_max_w + 'px</strong>');\n\n          } else if( fupl_options.img_min_w ) {\n            info_text.push( 'larghezza non inferiore a <strong>' +  fupl_options.img_min_w + 'px</strong>');\n\n          } else if( fupl_options.img_max_w  ) {\n            info_text.push( 'larghezza non superiore a <strong>' +  fupl_options.img_max_w + 'px</strong>');\n          }\n\n          if( fupl_options.img_h ) {\n            info_text.push( 'altezza <strong>' +  fupl_options.img_h + 'px</strong>');\n\n          } else if( fupl_options.img_min_h && fupl_options.img_max_h ) {\n            info_text.push( 'altezza compresa tra <strong>' +  fupl_options.img_min_h + 'px</strong> e <strong>' + fupl_options.img_max_h + 'px</strong>');\n\n          } else if( fupl_options.img_min_h ) {\n            info_text.push( 'altezza non inferiore a <strong>' +  fupl_options.img_min_h + 'px</strong>');\n\n          } else if( fupl_options.img_max_h  ) {\n            info_text.push( 'altezza non superiore a <strong>' +  fupl_options.img_max_h + 'px</strong>');\n          }\n        }\n      }\n\n    } else if( fupl_options.filetype === 'pdf' ) {\n      info_text.push( 'file in formato <strong>PDF</strong>' );\n    }\n\n    if( fupl_options.max_filesize !== null ) {\n      info_text.push( 'max <strong>' + fupl_options.max_filesize.feedback_size + '</strong>' );\n    }\n\n    let str = info_text.join(fupl_options.info_text_join_string);\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n\n    if(fupl_options.info_text_wrap_string && str) {\n      str = fupl_options.info_text_wrap_string[0] + str + fupl_options.info_text_wrap_string[1];\n    }\n    return str;\n\t};\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ( (upl) => {\n\n  // parametri di default condivisi da tutte le istanze\n  const default_options = {\n\n    /*\n    silent_degradation\n    se true e il browser non ha le funzionalità richieste, fileuploader\n    non dà nessun messaggio di errore ed è possibile gestire l'upload dei file con\n    un classico input file. È però necessario che sia presente nel markup\n    (all'interno dell'elemento a cui si istanzia l'uploader) e che la cosa sia\n    gestita anche lato server\n    */\n   silent_degradation: false,\n\n    // percorso del css FileUploader\n    css: null,\n\n    // Attiva la modalit&agrave; debug che mostra in console le informazioni\n    // sulla configurazione corrente\n    debug: false,\n\n    // locales string, usata per la formattazione della stringa numerica\n    // mostrata all'utente ricavata da `max_filesize`\n    locales: 'it-IT',\n\n    // Interfaccia per l'invio di messaggi di errore\n    // mes  →  chiave dell'oggetto `alert_messages` con il testo del messaggio di errore\n    // type →  uno tra info, error, warning\n    // opts →  l'oggetto file uploader options corrente\n    alert_api: (mes, opts, type = error) => { window.alert(opts.alert_messages.mes);}, // eslint-disable-line\n\n    // testo dei messaggi errore\n    // eventuali segnaposti sono sotituiti nell'applicazione\n    alert_messages: {\n      // messaggio browser non compatibile\n      unsuitable_browser: 'Il tuo browser non ha tutte le funzionalità richieste ' +\n      'da questa applicazione.\\n' +\n      'Utilizza la versione più recente di Firefox, Edge, Safari, Opera o Chrome',\n\n      too_much_files: 'Puoi selezionare un solo file!', // tentativo di trascinare più file con uploader singolo\n      xhr_error: 'Si &egrave; verificato un errore nel caricamento del file &ldquo;<strong>{{file_name}}</strong>&rdquo;.', // errore ajax\n      file_format_error: 'Il file &ldquo;<strong>{{file_name}}</strong>&rdquo; &egrave; di un formato non consentito',\n      file_size_error: 'Le dimensioni di &ldquo;<strong>{{file_name}}</strong>&rdquo; ({{file_size}}) '+\n        'superano il valore massimo consentito ({{allowed_size}})',\n\n      // immagini\n      img_err_start_string: \"L'immagine &ldquo;<strong>{{file_name}}</strong>&rdquo; non è corretta:\",\n      img_exact_width_err: \"Larghezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_min_width_err: \"Larghezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_max_width_err: \"Larghezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_exact_height_err: \"Altezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_min_height_err: \"Altezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_max_height_err: \"Altezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)\"\n    },\n\n    // Url dello script lato server che esegue il caricamento del file\n    // per l'istanza in esame. Ha la precedenza sull'impostazione globale\n    // obbligatorio\n    uploader_url: null,\n\n    // Tipologia dei file selezionabili\n    // il valore deve corrispondere ad una delle chievi dell'array `mimetypes`\n    filetype: 'auto',\n\n    /*\n    Stringa di estensioni o mimetypes separati da virgola accettabili per l'uploader\n    corrente in aggiunta o sostituzione di quanto impostato tramite il parametro `filetype`.\n\n    L'eventuale attributo `accept` del campo input contenuto\n    nel contenitore uploader (se presente), svolge la stessa funzione.\n\n    In entrambi i casi, i valori sono presi in considerazione solo se `filetype == 'auto'`\n\n    In presenza sia del parametro che dell'attributo `accept`, viene effettuato un merge,\n    e l'attributo ha la precedenza sul parametro.\n    Se il parametro &egrave; `null` e l'attributo `accept` non &egrave; presente,\n    con `filetype == auto` vengono accettati tutti i tipi di file.\n    */\n    accept: null,\n\n    /*\n    Parametro multiple.\n    Attiva la possibilit&agrave; di acquisire pi&ugrave; file con lo stesso uploader.\n    L'attivazione di questa opzione pu&ograve; essere effettuata anche tramite il parametro\n    del campo `input` /se presente)\n    */\n    multiple: false,\n\n    /*\n    Parametro required.\n    Eventuale impostazione del campo come obbligatorio.\n    L'attivazione di questa opzione pu&ograve; essere effettuata anche tramite il parametro\n    del campo `input` /se presente)\n    */\n    required: false,\n\n    /*\n    Disabilita (se presente) il form in cui &egrave; incluso l'uploader (disabilita anche iul pulsante submit)\n    da usare solo se nel form non sono presenti altri interazioni che potrebbero\n    entrare in collisione con questa opzione\n    */\n    disable_submit: false,\n\n    /*\n      Template dei markup utilizzati\n      - `main`         : markup principale inserito dentro l'elemento indicato da\n                         `upl.global_options.selector`. L'elemento, a cui viene inoltre\n                         aggiunta la classe `flup`, viene inoltre racchiuso in un elemento\n                         `div.flup-wrapper`\n\n      - `single_img`   : template aggiuntivo per immagini singole\n      - `multiple_imgs`: template aggiuntivo per immagini multiple\n      - `single_doc`   : template aggiuntivo per documenti singoli\n      - `multiple_docs`: template aggiuntivo per documenti multipli\n      - `no_file`      : template per indicare l'assenza di file\n\n      Consulta il readme per ulteriori dettagli.\n\n      Il markup di default utilizza classi di Boostrap 4.\n\n      L'eventuale contenuto dell'elemento originale viene eliminato (pu&ograve; contenere\n      un elemento type[file] per eventuale procedura di fallback)\n\n      I template possono essere alterati a piacimento, purch&eacute; si mantengano le classi\n      `fupl-*` utilizzate nella procedura.\n\n      I template delle immagini, devono contenere il tag img\n\n      doc e img multipli possono essere null, in questo caso vengono utilizzati\n      gli stessi markup per singolo file\n    */\n    templates: {\n      // wrapped in <div class=\"fupl-wrapper\"><div class=\"fupl\"></div></div>\n      main: '<div class=\"fupl-result\"></div>' +\n        '<div class=\"fupl-panel\">' +\n          '<div class=\"fupl-button\">' +\n            '<label><input type=\"file\"></label>' +\n            '<div class=\"fupl-dd-text\">{</div>' +\n          '</div>' +\n          '<div class=\"fupl-info-text\"></div>' +\n        '</div>',\n\n      // contenuto di fupl-result quando non sono presenti files\n      no_file: {\n        img: '<div class=\"fupl-result-empty text-muted small font-italic\">Nessuna immagine presente</div>',\n        doc: '<div class=\"fupl-result-empty text-muted small font-italic\">Nessun file presente</div>'\n      },\n\n      // trigger per la rimozione di un elemento da .fupl_results\n      // è aggiunto all'interno dell'elemento `.fupl-remove`, presente in ognuno\n      // degli elementi successivi\n      // Deve essere un elemento button\n      remove_btn: '<button type=\"button\" class=\"close fupl-remove-trigger\" aria-label=\"Elimina\" title=\"Elimina questo file\">' +\n            '<span aria-hidden=\"true\">&times;</span>' +\n          '</button>',\n\n      // markup aggiunto agli elementi in fase di caricamento\n      loading_element: '<div class=\"fupl-loading\"><progress class=\"fupl-progress\" max=100 value=0></progress></div>',\n\n      // feedback di caricamento alternativo se progress.lengthComputable == false\n      // se necessario e se la funzione `alternate_loading_func` non è presente,\n      // sostituisce l'elemento `.fupl-progress`\n      alternate_loading_progress: '<div class=\"spinner-grow text-primary\" role=\"status\">' +\n          '<span class=\"sr-only\">Loading...</span></div',\n\n      img: {\n        single: '<div class=\"fupl-item\">' +\n          '<div class=\"fupl-remove\"></div>' +\n          '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\">' +\n          '<div class=\"fupl-file-info\">' +\n            '<div class=\"text-truncate fupl-file-name\"></div>' +\n            '<div class=\"fupl-file-size\"></div>' +\n          '</div>' +\n        '</div>',\n\n        multiple: '<div class=\"fupl-item\">' +\n            '<div class=\"fupl-remove\"></div>' +\n            '<div class=\"fupl-img-wrapper\">' +\n              '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\">' +\n            '</div>' +\n            '<div class=\"fupl-file-info\">' +\n              '<div class=\"text-truncate fupl-file-name\"></div>' +\n              '<div class=\"fupl-file-size\"></div>' +\n            '</div>' +\n          '</div>'\n      },\n\n      doc : {\n        single: '<div class=\"fupl-item\">' +\n            '<div class=\"fupl-remove\"></div>' +\n            '<div class=\"fupl-doc text-truncate\">' +\n              '<a href=\"#\" class=\"text-truncate fupl-file-name fupl-url\"></a>' +\n            '</div>' +\n            '<span class=\"small ml-1 text-nowrap fupl-file-size\"></span>' +\n          '</div>',\n\n        multiple: null // usa single_doc\n      }\n    },\n\n    // Eventuale classi da aggiungere all'elemento wrapper di FileUploader\n    // (stringa separata da spazi)\n    wrapper_extra_class: null,\n\n    // Classe da aggiungere all'elemento FileUploader quando un file\n    // vi è trascinato sopra\n    element_dragover_class: 'fupl-is-dragover',\n\n    // Label da applicare da applicare all'elemento FileUploader.\n    // Se `null` e se esiste un elemento `label` all'interno dell'uploader,\n    // viene preso il testo dell'elemento\n    uploader_label_text: null,\n\n    // Opzione per l'aggiunta di un tag label prima dell'elemento uploader\n    uploader_add_label: true,\n\n    // Eventuale classe da aggiungere ad uploader_label\n    uploader_label_class: null,\n\n    /*\n    Array (o stringa json) dei testi del label del tag input (il primo elemento dell'array) e del testo\n    informativo per il drag &drop da inserire in `.fupl-dd-text` (il secondo elemento)\n    nelle varie combinazioni (img singola e multiple, doc singole e multipli)\n    segnaposti: ['{{input_label}}', '{{dd_text}}']\n    */\n    input_text: {\n      img: {\n        single:   [\"Seleziona un'immagine\", \"\\u2026oppure trascinala qui\"],\n        multiple: [\"Seleziona una o pi&ugrave; immagini\", \"\\u2026oppure trascinale qui\"]\n      },\n      doc: {\n        single: [\"Seleziona un documento\", \"\\u2026oppure trascinalo qui\"],\n        multiple: [\"Seleziona uno o pi&ugrave; documenti\", \"\\u2026oppure trascinali qui\"]\n      }\n    },\n\n    // classi da applicare al tag label dell'input[file] generato, utilizzato\n    // come pulsante per la selezione dei file\n    input_label_class: 'btn btn-outline-primary btn-sm',\n\n    // indica se mostrare o no il testo informativo su formati accettati,\n    // dimensioni immagini, ecc. Se si decide di non mostrarlo, potrebbe essere\n    // necessario rimuovere dal template l'elemento `.fupl-info-text`\n    show_info_text: true,\n\n    // stringhe aggiunte all'inizio e alla fine del testo informativo generato\n    // utilizzate solo se `custom_info_text` non &egrave; impostato\n    info_text_wrap_string: ['(', ')'],\n\n    // Stringa utilizzata per concatenare tra loro le varie parti del testo informativo generato\n    // utilizzata solo se `custom_info_text` non &egrave; impostato\n    info_text_join_string: ', ',\n\n    // Eventuale testo informativo personalizzato. se presente,\n    // sostituisce il testo generato in base ai formati, ai limiti di dimensioni, ecc.\n    custom_info_text: null,\n\n    /*\n    impostazioni per le immagini.\n    Applicate solo se filetype == 'img'.\n    Valori numerici che corrispondono alle dimensioni in pixel richieste per l'immagine.\n    I parametri img_min_* e img_max_* possono essere assegnati simultaneamente,\n    ma sono ignorati se esistono i corrispondenti parametri esatti (ad esempio,\n    se &egrave; presente img_w, i parametri img_min_w e img_max_w non vengono presi in considerazione).\n    Il valore di default di tutti i parametri &egrave; null, che significa che non vengono applicati.\n\n      * `img_min_w`: larghezza minima dell'immagine\n      * `img_max_w`: larghezza massima dell'immagine\n      * `img_w`: larghezza esatta dell'immagine\n      * `img_min_h`: altezza minima dell'immagine\n      * `img_max_h`: altezza massima dell'immagine\n      * `img_h`: altezza esatta dell'immagine\n    */\n    img_min_w   : null,\n    img_max_w   : null,\n    img_w       : null,\n    img_min_h   : null,\n    img_max_h   : null,\n    img_h       : null,\n\n\n    /*\n    Dimensione (peso) massima dell'immagine. Pu&ograve; essere un numero,\n    e in questo caso corrisponde ad una dimensione in KB, o una stringa\n    composta da un valore numerico e da un suffisso tra ‘KB’ e ‘MB’ (anche minuscoli).\n    Se il valore &egrave; null o se la stringa non viene riconosciuta,\n    non &egrave; applicato nessun limite.\n    */\n    max_filesize: null,\n\n    // Prefisso della variabile utilizzata per inviare al server i dati\n    // di ogni singolo file caricato. Il valore indicato &egrave; il nome base dell'array\n    // costruito per inviare i valori al server.\n    varname: 'file',\n\n    // Funzione richiamata dopo l'inizializzazione di ogni elemento FileUploader.\n    // La funzione viene invocata con l'oggetto di tutte le opzioni come argomento\n    init_callback: null,\n\n    /*\n    Funzione richiamata ogni volta che un file viene inviato al server.\n    La funzione viene invocata passandole un oggetto contenente:\n      * `item`: oggetto con i dati dell'elemento in esame:\n        - id: id univoco dell'elemento\n        - file: oggetto filelist corrente\n        - `width` e `height`: null o dimensioni in pixel dell'immagine\n        - `tmp_file`: nel caso di nuovi elementi: nome del file temporaneo\n      * `img_preview` : miniatura dell'immagine in forma di stringa Base64\n        (null se si tratta di altre tipologie)\n      * `fupl_options`: oggetto `options` corrente\n    */\n    upload_start_callback: null,\n\n    /*\n    Funzione richiamata ogni volta che un file viene caricato.\n    La funzione viene invocata passandole un oggetto contenente:\n      * `item`: oggetto con i dati dell'elemento in esame:\n        - `id`: id univoco dell'elemento\n        - `file`: oggetto filelist\n        - `width` e `height`: null o dimensioni in pixel dell'immagine\n        - `tmp_file`: nel caso di nuovi elementi: nome del file temporaneo\n      * `server_error`: null, se l'upload &egrave; stato completato correttamente. oppure\n          stringa con il messaggio di errore restituito\n      * `fupl_options`: oggetto `options` corrente\n    */\n    upload_complete_callback: null,\n\n    /*\n      Funzione di visulizzazione alternativa del progresso di caricamento\n      Se presente, viene sostituita a quella standard.\n      Viene invocata con due parametri:\n        - `progress_event`: evento progress del caricamento\n        - `fupl_options`: oggetto `options` corrente\n    */\n    alternate_loading_func: null,\n\n    /*\n    Array json degli eventuali elementi preregistrati, nella forma:\n      [\n        {\n          rel_id → eventuale id del record relazionato al file (può essere null o assente)\n                   se esiste, viene utilizzato al posto di `id` per indicare il record da cancellare\n          id     → identificativo univoco del file (può essere anche il percorso sul server)\n          name   → nome del file\n          url    → url per eventuale tag <a> presente nell'elemento (se immagine può essere assente o null)\n          src    → attributo `src` obbligatorio se immagine, oppure assente o null\n          wi     → larghezza in px se immagine oppure assente o null\n          he     → altezza in px se immagine oppure assente o null\n          size   → dimensione in bytes\n          [...]  → eventuali campi aggiuntivi specifici dell'istanza\n        }\n        [...]\n      ]\n\n      l'id viene aggiunto come attributo `data` al pulsante di eliminazione del file\n      (genera un hidden con l'id del file da eliminare dal server)\n    */\n    values: [],\n\n    // varname degli hidden con gli id dei file gi&agrave; registrati  da eliminare\n    delete_varname: 'elimina_file[]',\n\n// TODO\n    // attiva la possibilit&agrave; di riordinare gli elementi trascinandoli\n    // se true, i valori degli eventuali elementi preregistrati devono essere\n    // elencati nel josn `values` nell'ordine correttp\n    reorder: false,\n\n    // name della variabile hidden usata per registrare l'ordinamento\n    reorder_varname: 'order'\n\n// TODO gestione campi aggiuntivi\n  };\n\n  upl.setOptions = (...custom_options) => {\n\n    if( Object.assign && typeof Object.assign === \"function\") {\n      return Object.assign(\n        {},\n        default_options,\n        ...custom_options\n      );\n\n    } else { // IE 11, necessario anche se non c'è il supporto IE\n      let opts = {};\n      for(let i in default_options) {\n        opts[i] = default_options[i];\n        custom_options.forEach( item => {\n          if(item[i] !== undefined) {\n            opts[i] = item[i];\n          }\n        });\n      }\n      return opts;\n    }\n  };\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  // mimetypes ed estensioni accettabili in base al parametro `filetype`.\n  // Il parametro `auto` accetta tutti i tipi di file (salvo eventuali limitazioni\n  // aggiunte tramite parametro e attributo `accept`)\n  upl.mimetypes = {\n    auto : null,\n    img  : ['image/png', 'image/jpeg', 'image/pjpeg', 'image/gif', 'image/webp',\n            '.png', '.jpg', '.jpeg', '.pjpg', '.pjpeg', '.gif', '.webp'],\n    pdf  : ['application/pdf', '.pdf']\n  };\n\n  // nomi degli attributi data utilizzati per controllare alcuni stati o eventi dell'uploader\n  upl.data_attributes = {\n    fupl_selector : 'file_uploader2', // nome dell'attributo data usato come selector (e acui si possonoa ssociare delle opzioni json)\n    required      : 'required', // true se il caricamento del file è obbligatorio\n    hasValues     : 'hasValues', // true se l'uploader congtiene dei file (prergistrati o meno)\n    item_id       : 'id' // id dell'elemento aggiunto all'uploader (se preregistrato)\n  };\n\n  upl.set_has_values = fupl_options => {\n    let items = fupl_options.istance_result_wrapper.querySelectorAll('.fupl-item').length;\n    fupl_options.wrapper.dataset[upl.data_attributes.hasValues] = items? 'true' : 'false';\n    if(!items) {\n      fupl_options.istance_result_wrapper.innerHTML = fupl_options.templates.no_file[fupl_options._type];\n    }\n  };\n\n\n  upl.parse_filesize = (bytes, locales) => {\n    bytes = +bytes;\n    let mega = 1024*1024;\n    if(bytes >= mega ) {\n      return (bytes/mega).toLocaleString(locales, {maximumFractionDigits: 1}) + '<span class=\"fupl-unit\">MB</span>';\n    } else {\n      return Math.round(bytes/1024).toLocaleString(locales, {maximumFractionDigits: 0}) + '<span class=\"fupl-unit\">KB</span>';\n    }\n  };\n\n\n  /*\n   parse_max_filesize\n   elabora il parametro `filesize_value` (se esiste) e restituisce:\n    - `null` se `filesize_value` === null`\n    - `false` se `filesize_value` non è un valore corretto\n    - l'oggetto `{ maxbytes: 123456, unit: 'KB', feedback_size: ''}`\n    in cui:\n      - `maxbytes` è il valore in bytes del limite imposto\n      - `unit` è uno tra 'KB' e 'MB'\n      - `feedback_size` è la rappresentazione per un eventuale feedback per l'utente\n  */\n  upl.parse_max_filesize = (filesize_value, locales) =>  {\n    // controllo max_filesize ed elaborazione parametro\n    if( filesize_value ) {\n      var maxbytes, unit, feedback_size;\n\n      if(!isNaN(filesize_value)) { //solo numero, si assume siano KB\n        maxbytes = +filesize_value;\n        unit = 'KB';\n        feedback_size = maxbytes;\n\n      } else {\n\n        unit = filesize_value.substr(-2, 2).toUpperCase();\n        maxbytes = +filesize_value.substr(0, filesize_value.length-2);\n        feedback_size = maxbytes;\n\n        if(isNaN(maxbytes) || (unit !== 'KB' && unit !== 'MB') ) {\n          return false;\n        }\n      }\n\n      // se l'unità è indicata in KB ma il valore è più grande\n      // di un MB, il parametro viene aggiornato\n      if( maxbytes >= 1024 && unit === 'KB') {\n        unit = 'MB';\n        feedback_size = (Math.round((maxbytes / 1024) * 100) /100);\n      }\n\n      if(unit === 'KB') {\n        maxbytes = maxbytes * 1024;\n      } else {\n        maxbytes = maxbytes * 1024 * 1024;\n      }\n\n      return {\n        //'original_value': filesize_value,\n        //'unit'         : unit,\n        'maxbytes'     : maxbytes,\n        'feedback_size': feedback_size.toLocaleString(\n          locales, {maximumFractionDigits: (unit === 'KB'? 0 : 1)}\n        ) + '<span class=\"fupl-unit\">' + unit + '</span>'\n      };\n\n    } else {\n      return null;\n    }\n  };\n\n  return upl;\n\n})(FileUploader2 || {});\n"]}