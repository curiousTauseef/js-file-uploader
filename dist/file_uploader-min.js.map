{"version":3,"sources":["../js/file_uploader.js","../js/_init.js","../js/_create_uploader.js","../js/_create_item.js","../js/_set_listeners.js","../js/_send_files.js","../js/_build_hidden_fields.js","../js/_sortable.js","../js/_create_info_text.js","../js/_set_options.js","../js/_funcs_and_params.js"],"names":["FileUploader2","upl","isSuitableBrowser","navigator","userAgent","indexOf","appVersion","div","document","createElement","window","init","user_global_options","global_options","setOptions","silent_degradation","alert","alert_messages","unsuitable_browser","unsuitable_browser_callback","css","head","insertAdjacentHTML","querySelectorAll","data_attributes","fupl_selector","forEach","upl_element","element_all_dataset","dataset","fupl_dataset","fupl_options","JSON","parse","element","uploader_url","Error","filetype","toLowerCase","Object","keys","mimetypes","e","console","error","json_params","i","item","concat","log","createUploader","_input","querySelector","original_label","accept_attr","accept_params","accept","split","map","trim","getAttribute","_toConsumableArray","Set","max_filesize","parse_max_filesize","locales","_fupl_options$wrapper","_fupl_options$istance","multiple","Boolean","hasAttribute","required","disabled","_type","_mode","uploader_legend_text","innerHTML","classList","add","wrapper","parentNode","insertBefore","appendChild","wrapper_extra_class","apply","uploader_legend","_class","uploader_legend_class","push","length","join","templates","main","istance_input","istance_label","istance_dd_text","istance_info_text","istance_result_wrapper","setAttribute","input_text","input_label_class","show_info_text","custom_info_text","create_info_text","sortable","sortable_varname","activateSortable","values","_typeof","Array","isArray","createItem","set_has_values","setListeners","init_callback","debug","groupCollapsed","c_options","c_keys","sort","_toStringify","stringify","table","groupEnd","item_data","item_markup","fupl_item_wrapper","remove_btn","fupl_file_name","name","title","fupl_file_size","size_string","wi","he","size","parse_filesize","src","fupl_url","url","href","fupl_item","id","rel_id","item_id","loading","loading_element","fupl_item_dom","addEventListener","remove","delete_varname","addSortableEvents","eventName","preventDefault","stopPropagation","element_dragover_class","files","dataTransfer","alert_api","too_much_files","sendFiles","filelist","disable_submit","modo","_form","closest","submit_btns","btn","uploadFile","current_item","img_preview","this_item","file","width","height","fupl_progress","fupl_loading_wrapper","xhr_error_message","xhr_error","replace","remove_item_on_error","click","upload_start_callback","uploader_options","Promise","resolve","reject","ajax","XMLHttpRequest","open","onload","status","response","responseText","tmp_file","upload_complete_callback","server_error","statusText","onerror","upload","alternate_loading_func","perc_loaded","Math","round","loaded","total","lengthComputable","Infinity","value","alternate_loading_progress","fileData","FormData","append","send","then","buildHiddenFields","filelist_item","idx","Date","ext","pop","type","file_format_error","maxbytes","item_parsed_size","file_size_error","feedback_size","reader","FileReader","image","Image","result","err_mes","img_w","img_exact_width_err","img_min_w","img_min_width_err","img_max_w","img_max_width_err","img_h","img_exact_height_err","img_min_h","img_min_height_err","img_max_h","img_max_height_err","img_err_start_string","readAsDataURL","errormessage","normalize_file_name","filename","converted","conversionTable","à","è","é","ì","ò","ù","À","È","É","Ì","Ò","Ù","'","|","!","\"","$","%","&","/","(",")","=","?","^","*","[","]","ç","@","#","<",">","ü","Ü","ñ","Ñ","~",":","\\","charCodeAt","charAt","hidden_fields","field_values","file_name","_key","varname","classes","this","offsetWidth","offsetHeight","effectAllowed","setData","info_text","str","info_text_join_string","toUpperCase","slice","info_text_wrap_string","default_options","mes","opts","arguments","undefined","no_file","img","doc","single","_len","custom_options","assign","_ret","_loop","v","auto","pdf","hasValues","items","bytes","mega","toLocaleString","maximumFractionDigits","filesize_value","unit","isNaN","substr"],"mappings":"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","sourcesContent":["/*!@preserve\n *\n * FileUploader 2.0\n * HTML5 / JS Async Uploader\n * Massimo Cassandro 2017-2019\n *\n */\n\n//* eslint no-console: 0, no-unused-vars: 0, no-empty:  0 */\n/* exported FileUploader2 */\n\n/*\n@codekit-append '_funcs_and_params.js'\n@codekit-append '_set_options.js'\n@codekit-append '_create_info_text.js'\n@codekit-append '_sortable.js'\n@codekit-append '_build_hidden_fields.js'\n@codekit-append '_send_files.js'\n@codekit-append '_set_listeners.js'\n@codekit-append '_create_item.js'\n@codekit-append '_create_uploader.js'\n\n@codekit-append '_init.js'\n\n*/\n\"use strict\";\nvar FileUploader2 = (function () {\n\n  let upl = {};\n\n  return upl;\n})();\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  // VARIABILI E METODI PRIVATI\n  /*\n    isSuitableBrowser\n    Verifica che il browser sia in grado di gestire le funzionalità richieste.\n    Restituisce `true` o `false`\n  */\n  const isSuitableBrowser = () => {\n    // Eliminazione IE\n    if( navigator.userAgent.indexOf('MSIE') !== -1 ||\n    navigator.appVersion.indexOf('Trident/') > -1 ||\n    navigator.userAgent.indexOf('Trident/') > -1 ){\n      return false;\n    }\n\n    var div = document.createElement( 'div' );\n    return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) )\n      && 'FormData' in window\n      && 'FileReader' in window\n      && 'fetch' in window;\n  };\n\n\n  /*\n    init\n    Seleziona gli elementi con l'attributo `fupl_selector` e avvia FileUploader\n    `user_global_options` è l'oggetto istanziato al momento di avviare FileUploader2,\n    ha la stessa struttura di `default_options` (definito in _set_options.js)\n    e può sovrascrivere ogni suo elemento\n  */\n  upl.init = (user_global_options) => {\n\n    const global_options = upl.setOptions(user_global_options);\n\n    // verifica che il browser sia compatibile\n    if( !isSuitableBrowser() ) {\n      if(!global_options.silent_degradation) {\n        alert(global_options.alert_messages.unsuitable_browser);\n      }\n      if(global_options.unsuitable_browser_callback && typeof global_options.unsuitable_browser_callback === 'function') {\n        global_options.unsuitable_browser_callback();\n      }\n      return;\n    }\n\n    // caricamento CSS\n    if(global_options.css) {\n      document.head.insertAdjacentHTML('beforeend',\n        '<link rel=\"stylesheet\" href=\"' + global_options.css + '\" type=\"text/css\" media=\"all\">'\n      );\n    }\n\n    // istanze uploader\n    //---------------------------------------------------\n    document.querySelectorAll('[data-' + upl.data_attributes.fupl_selector + ']').forEach( upl_element => {\n      /*\n        merge dei parametri inseriti tramite attributi `data`, in cui:\n\n        * `upl_element.dataset`:\n            tutti gli attributi inseriti singolarmente (es. data-filetype=\"img\")\n\n        * `upl_element.dataset[upl.data_attributes.fupl_selector]`:\n            attributi inseriti tramite json assegnato a `data- + 'upl.data_attributes.fupl_selector'`\n            (es data-file_uploader2='{\"filetype\":\"img\"}')\n\n        In caso di conflitto prevalgono gli ultimi\n      */\n\n      let element_all_dataset = upl_element.dataset,\n      fupl_dataset = upl_element.dataset[upl.data_attributes.fupl_selector],\n      fupl_options = {};\n\n      if(element_all_dataset === '') {\n        element_all_dataset = {};\n      }\n\n      if(fupl_dataset === '') {\n        fupl_dataset = {};\n      } else {\n        fupl_dataset = JSON.parse(fupl_dataset);\n      }\n\n      fupl_options = upl.setOptions(\n        global_options,\n        fupl_dataset,\n        element_all_dataset\n      );\n\n      // cancella la chiave `upl.data_attributes.fupl_selector`\n      // (al solo scopo di ridurre la confusione)\n      delete fupl_options[upl.data_attributes.fupl_selector];\n\n      // aggiunta dell'elemento stesso ad  `fupl_options`:\n      fupl_options.element = upl_element;\n\n      // controllo parametri e avvio uploader\n      try {\n        //  controllo url\n        if( !fupl_options.uploader_url ) {\n          throw new Error( \"Parametro `uploader_url` non impostato\" );\n        }\n\n        //  controllo parametro filetype\n        fupl_options.filetype = fupl_options.filetype.toLowerCase();\n        if( Object.keys(upl.mimetypes).indexOf(fupl_options.filetype) === -1 ) {\n          throw new Error( \"Parametro `filetype` non corretto\" );\n        }\n      } catch(e) {\n        console.error( e );// eslint-disable-line\n      }\n\n      // parametri che devono essere array e che potrebbero essere presenti\n      // come attributi data (stringa)\n      const json_params = [\n        'input_text',\n        'templates',\n        'info_text_wrap_string',\n        'values'\n      ];\n      json_params.forEach(item => {\n        try {\n          if(typeof fupl_options[item] === 'string' ) {\n            fupl_options[item] = JSON.parse(fupl_options[item]);\n          }\n        } catch(e) {\n          console.error(`L'elemento “${item}” non è un json valido`); // eslint-disable-line\n          console.log(fupl_options.element); // eslint-disable-line\n          console.error( e );// eslint-disable-line\n        }\n      });\n\n      // interpretazione automatica di tutti i parametri booleani o null\n      for(let i in fupl_options) {\n        if(typeof fupl_options[i] === 'string' &&\n          ['true', 'false', 'null'].indexOf(fupl_options[i].toLowerCase) !== -1) {\n          fupl_options[i] = JSON.parse(fupl_options[i]);\n        }\n      }\n\n\n      new upl.createUploader(fupl_options);\n    }); // end document.querySelectorAll(fupl_selector).forEach\n  }; // end upl.init\n\n  return upl;\n\n})(FileUploader2 || {});\n\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  upl.createUploader = (fupl_options) => {\n\n    // eventuale campo input e relativo tag label\n    let _input = fupl_options.element.querySelector('input[type=\"file\"]'),\n      original_label = fupl_options.element.querySelector('label');\n\n\n    // implementazione eventuali parametro/attributo `accept`\n    if( fupl_options.filetype === 'auto' ) {\n\n      let accept_attr = [],\n      accept_params = [];\n\n      if( fupl_options.accept !== null ) {\n        accept_params = fupl_options.accept\n          .split(',').map( item => item.trim() );\n      }\n\n      if(_input && _input.getAttribute('accept') ) {\n        accept_attr = _input.getAttribute('accept')\n          .split(',').map( item => item.trim() );\n      }\n\n      // https://www.peterbe.com/plog/merge-two-arrays-without-duplicates-in-javascript\n      fupl_options.accept = [...new Set([...accept_params, ...accept_attr])];\n\n    } else {\n      fupl_options.accept = upl.mimetypes[fupl_options.filetype];\n    }\n\n    // elaborazione max_filesize\n    let max_filesize = upl.parse_max_filesize(fupl_options.max_filesize, fupl_options.locales);\n    if( max_filesize === false ) {\n      throw new Error( '\"' + fupl_options.max_filesize + '\" non è un valore corretto per `max_filesize`');\n    } else {\n      fupl_options.max_filesize = max_filesize;\n    }\n\n    // parametro o attributo multiple\n    fupl_options.multiple = Boolean(fupl_options.multiple ||\n      (_input && _input.hasAttribute('multiple') ));\n\n    // parametro o attributo required\n    fupl_options.required = Boolean(fupl_options.required ||\n      (_input && _input.hasAttribute('required') ));\n\n    // parametro o attributo disabled\n    fupl_options.disabled = Boolean(fupl_options.disabled ||\n      (_input && _input.hasAttribute('disabled') ));\n\n\n    // tipologia generale dell'uploader (img o doc) e modalità\n    // selezione file\n    fupl_options._type = fupl_options.filetype === 'img'? 'img' : 'doc';\n    fupl_options._mode = fupl_options.multiple? 'multiple' : 'single';\n\n    // testo label (da tag o parametro uploader_legend_text)\n    if( !fupl_options.uploader_legend_text && original_label) {\n      fupl_options.uploader_legend_text = original_label.innerHTML;\n    }\n    // caso in cui sia presente nessun valore\n    if ( !fupl_options.uploader_legend_text ) {\n      fupl_options.uploader_legend_text = '__legend non presente__';\n    }\n\n    // aggiunta della classe principale\n    fupl_options.element.classList.add(\"fupl\");\n\n    // aggiunta wrapper\n    fupl_options.wrapper = document.createElement('fieldset');\n    fupl_options.element.parentNode.insertBefore(fupl_options.wrapper, fupl_options.element);\n    fupl_options.wrapper.appendChild(fupl_options.element);\n    fupl_options.wrapper.classList.add(\"fupl-wrapper\");\n    fupl_options.wrapper.classList.add(\"fupl-type-\" + fupl_options._type );\n    if(fupl_options.multiple) {\n      fupl_options.wrapper.classList.add(\"fupl-multiple\");\n    }\n    // aggiunta eventuali classi personalizzate\n    if( fupl_options.wrapper_extra_class ) {\n      fupl_options.wrapper.classList.add( ...fupl_options.wrapper_extra_class.split(' ') );\n    }\n\n    // aggiunta legend uploader\n    if( fupl_options.uploader_legend ) {\n      let _class = ['fupl-legend'];\n      if( fupl_options.uploader_legend_class ) {\n        _class.push(fupl_options.uploader_legend_class);\n      }\n      if( fupl_options.required ) {\n        _class.push('required');\n      }\n\n      fupl_options.element.insertAdjacentHTML('beforebegin',\n        '<legend' + (_class.length? ' class=\"' + _class.join(' ') + '\"' : '') + '>' +\n          fupl_options.uploader_legend_text +\n        '</legend>'\n      );\n      fupl_options.wrapper.classList.add( 'fupl-has-legend' );\n    }\n\n    // aggiunta template uploader\n    fupl_options.element.innerHTML = fupl_options.templates.main;\n\n    fupl_options.istance_input = fupl_options.element.querySelector('.fupl-panel input[type=\"file\"]');\n    fupl_options.istance_label = fupl_options.element.querySelector('.fupl-panel label');\n    fupl_options.istance_dd_text = fupl_options.element.querySelector('.fupl-panel .fupl-dd-text');\n    fupl_options.istance_info_text = fupl_options.element.querySelector('.fupl-panel .fupl-info-text');\n    fupl_options.istance_result_wrapper = fupl_options.element.querySelector('.fupl-result');\n\n\n    // inserimento testi e attributi\n    // if( fupl_options.required ) {\n    //   fupl_options.istance_input.setAttribute('required', '');\n    // }\n    if( fupl_options.multiple ) {\n      fupl_options.istance_input.setAttribute('multiple', '');\n    }\n    if( fupl_options.accept !== null ) {\n      fupl_options.istance_input.setAttribute('accept', fupl_options.accept.join(','));\n    }\n\n    // aggiunta attributo data al wrapper per segnalare il required\n    if( fupl_options.required ) {\n      fupl_options.wrapper.dataset[upl.data_attributes.required] = 'true';\n    }\n\n    // aggiunta attributo disabled al wrapper\n    if( fupl_options.disabled ) {\n      fupl_options.wrapper.setAttribute('disabled', true);\n      fupl_options.wrapper.setAttribute('aria-disabled', true);\n    }\n\n\n    fupl_options.istance_label.insertAdjacentHTML('beforeend',\n      fupl_options.input_text[fupl_options._type][fupl_options._mode][0]\n    );\n    if(fupl_options.input_label_class) {\n      fupl_options.istance_label.classList.add(...fupl_options.input_label_class.split(' '));\n    }\n    fupl_options.istance_dd_text.innerHTML = fupl_options.input_text[fupl_options._type][fupl_options._mode][1];\n\n    // info text\n    if( fupl_options.show_info_text ) {\n      if(fupl_options.custom_info_text) {\n        fupl_options.istance_info_text.innerHTML = fupl_options.custom_info_text;\n      } else {\n        fupl_options.istance_info_text.innerHTML = upl.create_info_text(fupl_options);\n      }\n    }\n\n\n    // Sortable\n    if( fupl_options.sortable) {\n      if( fupl_options.multiple && fupl_options.sortable_varname ) {\n\n        upl.activateSortable(fupl_options);\n\n      } else {\n        console.error('\"sortable\" option incorrectly set'); // eslint-disable-line\n        fupl_options.sortable = false;\n      }\n\n    }\n\n    // aggiunta valori\n    // se values esiste ma è un oggetto, viene inserito in un array (non è garanzia di funzionamento)\n    // se è un altro tipo di variabile viene generato un errore\n    if(fupl_options.values) {\n      if(typeof fupl_options.values === 'object') {\n        if(!Array.isArray(fupl_options.values)) {\n          fupl_options.values = [fupl_options.values];\n        }\n      } else {\n        console.error(\"Il parametro `values` non è corretto\"); // eslint-disable-line\n      }\n    }\n\n    if( fupl_options.values && fupl_options.values.length ) {\n\n      fupl_options.values.forEach( item => {\n        upl.createItem(item, fupl_options);\n      });\n\n    }\n    upl.set_has_values(fupl_options);\n\n    // gestione aggiunta nuovi elementi\n    upl.setListeners(fupl_options);\n\n\n    // esecuzione init_callback, se presente\n    if( fupl_options.init_callback !== null ) {\n      fupl_options.init_callback( fupl_options );\n    }\n\n    //debug\n    if( fupl_options.debug ) {\n      /* eslint-disable */\n      console.groupCollapsed('FileUploader options');\n      // creazione di un oggetto bidimensinale per\n      // semplificare la rappresentazione in tabella\n      let c_options = {},\n      c_keys = Object.keys(fupl_options);\n      c_keys.sort();\n      c_keys.forEach(item => {\n        let _toStringify = typeof fupl_options[item] === 'object' &&\n        fupl_options[item] !== null &&\n          item !== 'element';\n        c_options[item] = _toStringify ? JSON.stringify(fupl_options[item], null, ' ') : fupl_options[item];\n      });\n      console.table(c_options);\n      console.groupCollapsed('fupl_options');\n        console.log(fupl_options);\n      console.groupEnd();\n      console.groupEnd();\n      /* eslint-enable */\n    } // end if debug\n\n\n  }; // end upl.createUploader\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n\n  /*\n  Aggiunge un elemento a fupl_options.istance_result_wrapper\n  e imposta i necessari listeners\n\n  item_data è l'oggetto con i dati dell'elemento:\n\n  {\n    id    → identificativo univoco del file (può essere anche il percorso sul server)\n    name  → nome del file\n    url   → url per eventuale tag <a> presente nell'elemento (se immagine può essere assente o null)\n    src   → attributo `src` obbligatorio se immagine, oppure assente o null\n    wi    → larghezza in px se immagine oppure assente o null\n    he    → altezza in px se immagine oppure assente o null\n    size  → dimensione in bytes\n    loading → true se se si tratta di un elemento in fase di upload\n    [...] → eventuali campi aggiuntivi specifici dell'istanza\n  }\n\n  */\n\n  upl.createItem = (item_data, fupl_options) => {\n\n    try {\n\n      let item_markup = fupl_options.templates[fupl_options._type][fupl_options._mode];\n      if( item_markup === null && fupl_options._mode === 'multiple' ) {\n        item_markup = fupl_options.templates[fupl_options._type]['single'];\n      }\n\n      let fupl_item_wrapper = document.createElement('div'); // wrapper da rimuovere al momento dell'inserimento\n      fupl_item_wrapper.innerHTML = item_markup;\n\n      // aggiunta pulsante rimozione\n      fupl_item_wrapper.querySelector('.fupl-remove').innerHTML = fupl_options.templates.remove_btn;\n\n\n\n      /*\n        aggiunta dati specifici dell'elemento:\n\n        elementi interni a fupl-item:\n          .fupl-file-name\n          .fupl-file-size\n          .fupl-img →  img\n          .fupl-img → a.href\n          .fupl-doc →  a.href\n\n      */\n\n      // nome file\n      let fupl_file_name = fupl_item_wrapper.querySelector('.fupl-file-name');\n      if(fupl_file_name && item_data.name ) {\n        fupl_file_name.innerHTML = item_data.name;\n        fupl_file_name.title = item_data.name;\n      }\n\n      // info dimensioni\n      let fupl_file_size = fupl_item_wrapper.querySelector('.fupl-file-size');\n      if(fupl_file_size ) {\n        let size_string = '';\n        if(fupl_options._type === 'img' && item_data.wi && item_data.he) {\n          size_string = item_data.wi + '&times;' + item_data.he + '<span class=\"fupl-unit\">px</span>';\n          if(item_data.size) {\n            size_string += ' &ndash; ';\n          }\n        }\n        if(item_data.size) {\n          size_string += upl.parse_filesize(item_data.size, fupl_options.locales);\n        }\n\n        fupl_file_size.innerHTML = size_string;\n      }\n\n      // immagine\n      if( fupl_options._type === 'img' ) {\n        fupl_item_wrapper.querySelector('.fupl-img').src = item_data.src;\n      }\n\n      // url\n      let fupl_url = fupl_item_wrapper.querySelector('.fupl-url');\n      if( fupl_url && item_data.url) {\n        fupl_url.href = item_data.url;\n      }\n\n      let fupl_item = fupl_item_wrapper.querySelector('.fupl-item');\n      // id elemento per eventuale cancellazione\n      // se esiste rel_id, viene utilizzato quello\n      if(item_data.id || item_data.rel_id) {\n        fupl_item.dataset[upl.data_attributes.item_id] = item_data.rel_id? item_data.rel_id : item_data.id;\n      }\n\n      if(item_data.loading) {\n        fupl_item.classList.add('fupl-is-uploading');\n        fupl_item.insertAdjacentHTML('beforeend',\n          fupl_options.templates.loading_element\n        );\n      }\n\n      if(fupl_options._mode === 'single') {\n        fupl_options.istance_result_wrapper.innerHTML = fupl_item_wrapper.innerHTML;\n      } else {\n\n        // se non esistono elementi caricati predentemente, si svuota il div per\n        // eliminare la scritta no file\n        if( !fupl_options.istance_result_wrapper.querySelector('.fupl-item')) {\n          fupl_options.istance_result_wrapper.innerHTML = '';\n        }\n\n        fupl_options.istance_result_wrapper.insertAdjacentHTML('beforeend',\n          fupl_item_wrapper.innerHTML\n        );\n      }\n\n      // aggiunta evento trigger eliminazione elemento\n      let fupl_item_dom = fupl_options.istance_result_wrapper.querySelector('.fupl-item:last-child');\n      fupl_item_dom.querySelector('.fupl-remove-trigger').addEventListener('click', () => {\n        // se l'id non è impostato si tratta di un nuovo elemento,\n        // e non va eseguita la cancellazione sul server\n        let id = fupl_item_dom.dataset[upl.data_attributes.item_id];\n        fupl_item_dom.remove();\n        if(id) {\n          fupl_options.wrapper.insertAdjacentHTML('beforeend',\n            `<input type=\"hidden\" name=\"${fupl_options.delete_varname}\" value=\"${id}\">`\n          );\n        }\n\n        // controllo se istance_result_wrapper è vuoto\n        // e impostazione di attributo e contenuti\n        upl.set_has_values(fupl_options);\n\n      });\n\n      // sortable\n      if( fupl_options.sortable ) {\n        fupl_item_dom.setAttribute('draggable', true);\n\n        upl.addSortableEvents(fupl_item_dom, fupl_options);\n      }\n\n      return fupl_options.istance_result_wrapper.querySelector('.fupl-item:last-child');\n\n    } catch(e) {\n      console.error(e); // eslint-disable-line\n    }\n\n  }; // end upl.createItem\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  // https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n  upl.setListeners = (fupl_options) => {\n\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }, false);\n    });\n\n    ['dragover', 'dragenter'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, () => {\n        fupl_options.element.classList.add( fupl_options.element_dragover_class );\n      }, false);\n    });\n\n    ['dragleave', 'dragend'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, () => {\n        fupl_options.element.classList.remove( fupl_options.element_dragover_class );\n      }, false);\n    });\n\n    fupl_options.element.addEventListener('drop', (e) => {\n      fupl_options.element.classList.remove( fupl_options.element_dragover_class );\n      if(!fupl_options.wrapper.hasAttribute('disabled')) {\n        let files = e.dataTransfer.files;\n\n        if(files.length) { // se 0 è un riordinamento o altro evento\n          if( !fupl_options.multiple && files.length > 1 ) {\n            fupl_options.alert_api(fupl_options.alert_messages.too_much_files, fupl_options);\n          } else {\n            upl.sendFiles( files, fupl_options );\n          }\n        }\n      }\n    }, false);\n\n    // selezione tramite input\n    fupl_options.istance_input.addEventListener('change', () => {\n      upl.sendFiles( fupl_options.istance_input.files, fupl_options );\n    });\n\n  }; // end upl.setListeners\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  /*\n\tsendFiles\n\tEsegue i controlli impostati, quindi la chiamata ajax e produce\n\til feedback per l'utente\n\t*/\n  upl.sendFiles = (filelist, fupl_options) => {\n\n\n    /*\n    disable_submit\n    disabilita il form fino a caricamento completato\n    */\n    const disable_submit = (modo) => {\n      // modo === true → disable, false → enable\n      const _form = fupl_options.element.closest('form');\n\n      if(fupl_options.disable_submit && _form) {\n        const submit_btns = _form.querySelectorAll('[type=\"submit\"]');\n\n        submit_btns.forEach( btn => {\n          btn.disabled = modo;\n        });\n\n        //BUG il listener non viene rimosso con modo == false\n        // const submitHandler = (e) => {\n        //   e.preventDefault();\n        //   //return false;\n        // };\n        // if(modo === true) {\n        //   _form.addEventListener('submit', submitHandler);\n        // } else {\n        //   if( !fupl_options.istance_result_wrapper.querySelector('.fupl-item.fupl-is-uploading')) {\n        //     _form.removeEventListener('submit', submitHandler);\n        //   }\n        // }\n      }\n    },\n\n    /*\n    uploadFile\n    esegue l'upload Ajax\n    https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n\n    current_item contiene:\n      - `id`: id univoco dell'elemento\n      - `file`: oggetto filelist\n      - `width` e height: dimensioni in pixel dell'immagine.\n                  null se non si tratta di immagini\n      - `tmp_file`: nel caso di nuovi elementi: nome del file temporaneo\n\n    */\n    uploadFile = function ( current_item, img_preview ) {\n\n      // disabilitazione form\n      disable_submit(true);\n\n      // aggiunta elemento all'uploader\n      let this_item = upl.createItem({\n          id   : null,\n          name : current_item.file.name,\n          url  : null,\n          src  : img_preview,\n          wi   : current_item.width,\n          he   : current_item.height,\n          size : current_item.file.size,\n          loading:true\n      }, fupl_options),\n\n      fupl_progress= this_item.querySelector('.fupl-progress'),\n      fupl_loading_wrapper = this_item.querySelector('.fupl-loading'),\n\n      xhr_error_message = fupl_options.alert_messages.xhr_error.replace(/{{file_name}}/, current_item.file.name);\n\n      //console.log(this_item); // eslint-disable-line\n\n      const remove_item_on_error = () => {\n        this_item.querySelector('.fupl-remove-trigger').click();\n      };\n\n      /*\n      Funzione callback personalizzata\n      Vedi `_set_options.js` per tutti i parametri\n      */\n      if( fupl_options.upload_start_callback && typeof fupl_options.upload_start_callback === 'function') {\n        fupl_options.upload_start_callback({\n          'item'              : current_item,\n          'img_preview'       : img_preview,\n          'uploader_options'  : fupl_options\n        });\n      }\n\n      new Promise(function(resolve, reject) {\n        let ajax = new XMLHttpRequest();\n        ajax.open( 'POST', fupl_options.uploader_url, true );\n\n        ajax.onload = function() {\n\n          if( ajax.status >= 200 && ajax.status < 400 ) {\n\n            const response = JSON.parse( ajax.responseText );\n\n            /*\n              jsonResponse:\n              {\n                \"tmp_file\": \"file_temporaneo\",\n                \"error\": null\n              }\n            */\n            if(response.error) {\n\n              fupl_options.alert_api( xhr_error_message, fupl_options );\n              /* eslint-disable */\n              console.error( response.error );\n              /* eslint-enable */\n\n              reject();\n\n            } else {\n              current_item.tmp_file = response.tmp_file;\n              resolve();\n            }\n\n            /*\n            Funzione callback personalizzata\n            Vedi `_set_options.js` per tutti i parametri\n            */\n            if( fupl_options.upload_complete_callback && typeof fupl_options.upload_complete_callback === 'function') {\n              fupl_options.upload_complete_callback({\n                'item'          : current_item,\n                'server_error'  : response.error,\n                'fupl_options'  : fupl_options\n              });\n            }\n\n\n          } else {\n            fupl_options.alert_api( xhr_error_message, fupl_options );\n            /* eslint-disable */\n            console.error( ajax.status, ajax.statusText );\n            console.error( ajax.responseText );\n            /* eslint-enable */\n          }\n\n          reject();\n        };\n\n        ajax.onerror = function() {\n          fupl_options.alert_api( xhr_error_message, fupl_options );\n          /* eslint-disable */\n          if(fupl_options.debug) {\n            console.error( ajax.status,  ajax.statusText );\n            console.error( ajax.responseText );\n          }\n          /* eslint-enable */\n\n          reject();\n        };\n\n        ajax.upload.addEventListener('progress', function (e) {\n          if( fupl_options.alternate_loading_func &&\n            typeof fupl_options.alternate_loading_func === 'function') {\n              fupl_options.alternate_loading_func(e, fupl_options);\n\n          } else {\n            let perc_loaded = Math.round(e.loaded / e.total * 100.0) || 0;\n\n            //console.log(e.loaded ,e.total, perc_loaded); // eslint-disable-line\n            if(fupl_progress) {\n              if(e.lengthComputable) {\n                perc_loaded = perc_loaded === Infinity? 100 : perc_loaded;\n                this_item.querySelector('.fupl-progress').value = perc_loaded;\n              } else {\n                fupl_loading_wrapper.innerHTML = fupl_options.templates.alternate_loading_progress;\n                fupl_progress = null;\n              }\n            }\n          }\n        }, false);\n\n\n        let fileData = new FormData();\n        fileData.append('file', current_item.file);\n        ajax.send( fileData );\n      }) // end promise\n      .then(\n        // resolve\n        function (  ) {\n          //console.log('resolve'); // eslint-disable-line\n          this_item.classList.remove('fupl-is-uploading');\n          this_item.querySelector('.fupl-loading').remove(); // elemento loading\n\n          this_item.insertAdjacentHTML('beforeend',\n            upl.buildHiddenFields(current_item, fupl_options)\n          );\n\n          upl.set_has_values(fupl_options);\n\n          //Se non ci sono altri elemento in caricamento, disable_submit viene annullato\n          disable_submit(false);\n\n        },\n        //reject\n        function (  ) {\n          //console.log('reject'); // eslint-disable-line\n          remove_item_on_error();\n          upl.set_has_values(fupl_options);\n        }\n      );\n\n    };\n\n    if( filelist.length ) {\n\n      // https://stackoverflow.com/questions/38362231/\n      //how-to-use-promise-in-foreach-loop-of-array-to-populate-an-object\n      [...filelist].forEach(function (filelist_item, idx) {\n        try {\n\n          let current_item = {\n            id: 'fupl_item_' + (+new Date()) + '_' + idx, // id unico\n            file: filelist_item,\n            width: null,\n            height: null,\n            tmp_file: null\n          };\n\n          // controllo filetype (per drag&drop e browser che non supportano accept)\n          if( fupl_options.accept.length ) {\n            let ext = filelist_item.name.split('.').pop().toLowerCase();\n            if( fupl_options.accept.indexOf( filelist_item.type ) === -1 &&\n              fupl_options.accept.indexOf( '.' + ext ) === -1) {\n\n              throw fupl_options.alert_messages.file_format_error\n                .replace(/{{file_name}}/, filelist_item.name );\n            }\n          } // end controllo filetype\n\n          // controllo maxfilesize\n          if( fupl_options.max_filesize !== null ) {\n            if( filelist_item.size > fupl_options.max_filesize.maxbytes ) {\n              let item_parsed_size = upl.parse_filesize(filelist_item.size, fupl_options.locales);\n\n              throw fupl_options.alert_messages.file_size_error\n                .replace(/{{file_name}}/, filelist_item.name )\n                .replace(/{{file_size}}/, item_parsed_size )\n                .replace(/{{allowed_size}}/, fupl_options.max_filesize.feedback_size );\n\n            }\n          } // end controllo maxfilesize\n\n          // analisi immagine e caricamento\n          if(fupl_options.filetype === 'img') {\n\n            let reader  = new FileReader();\n            reader.addEventListener(\"load\", function () {\n\n              let image = new Image();\n              image.src = reader.result;\n              image.addEventListener(\"load\", function () {\n\n                let err_mes = [];\n                current_item.width=image.width;\n                current_item.height=image.height;\n\n                if( fupl_options.img_w && image.width !== fupl_options.img_w ) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_exact_width_err\n                      .replace(/{{image_dimension}}/, image.width)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_w)\n                  );\n\n                } else if(fupl_options.img_min_w && image.width < fupl_options.img_min_w) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_min_width_err\n                      .replace(/{{image_dimension}}/, image.width)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_min_w)\n                  );\n\n                } else if(fupl_options.img_max_w && image.width > fupl_options.img_max_w) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_max_width_err\n                      .replace(/{{image_dimension}}/, image.width)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_max_w)\n                  );\n                }\n\n                if (fupl_options.img_h && image.height !== fupl_options.img_h) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_exact_height_err\n                      .replace(/{{image_dimension}}/, image.height)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_h)\n                  );\n\n                } else if(fupl_options.img_min_h && image.height < fupl_options.img_min_h) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_min_height_err\n                      .replace(/{{image_dimension}}/, image.height)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_min_h)\n                  );\n\n                } else if(fupl_options.img_max_h && image.height > fupl_options.img_max_h) {\n                  err_mes.push(\n                    fupl_options.alert_messages.img_max_height_err\n                      .replace(/{{image_dimension}}/, image.height)\n                      .replace(/{{allowed_dimension}}/, fupl_options.img_max_h)\n                  );\n                }\n\n                if( err_mes.length ) {\n                  fupl_options.alert_api(\n                    fupl_options.alert_messages.img_err_start_string\n                    .replace(/{{file_name}}/, filelist_item.name ) + '<br>' +\n                    '<ul><li>' + err_mes.join('</li><li>') + '</li></ul>',\n                  fupl_options );\n\n                } else {\n                  uploadFile( current_item, reader.result );\n                }\n\n              }, false); // end image.addEventListener(\"load\"\n\n            }, false); // end reader.addEventListener(\"load\"\n\n            reader.readAsDataURL( filelist_item );\n\n          } else { // non immagine\n            uploadFile( current_item );\n\n          } // end if image\n\n        } catch (errormessage) {\n          fupl_options.alert_api( errormessage, fupl_options ,'error');\n        }\n      }); // end foreach\n\n    } // end if( filelist.length )\n\n  }; // end upl.sendFiles\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  /*\n    elimina i caratteri ascii > 127\n    Restituisce la stringa normalizzata\n  */\n  const normalize_file_name = function (filename) {\n    let converted = \"\";\n    const conversionTable = { // Reference table Unicode vs ASCII\n      'à' : 'a', // 224\n      'è' : 'e', // 232\n      'é' : 'e', // 233\n      'ì' : 'i', // 236\n      'ò' : 'o', // 242\n      'ù' : 'u', // 249\n      'À' : 'A', // 192\n      'È' : 'E', // 200\n      'É' : 'E', // 201\n      'Ì' : 'I', // 204\n      'Ò' : 'O', // 210\n      'Ù' : 'U', // 217\n      \"'\" : '_', // 39\n      '|' : '_', // 124\n      '!' : '_', // 33\n      '\"' : '_', // 34\n      '$' : '_', // 36\n      '%' : '_', // 37\n      '&' : '_', // 38\n      '/' : '_', // 47\n      '(' : '_', // 40\n      ')' : '_', // 41\n      '=' : '_', // 61\n      '?' : '_', // 63\n      '^' : '_', // 94\n      '*' : '_', // 42\n      '[' : '_', // 91\n      ']' : '_', // 93\n      'ç' : 'c', // 231\n      '@' : '_', // 64\n      '#' : '_', // 35\n      '<' : '_', // 60\n      '>' : '_', // 62\n      'ü' : 'u', // 252\n      'Ü' : 'U', // 220\n      'ñ' : 'n', // 241\n      'Ñ' : 'N', // 209\n      '~' : '_', // 126\n      ':' : '_',\n      '\\\\' : '_'\n    };\n\n    for(var i = 0; i < filename.length; i++) {\n      if( filename[i] in conversionTable) {\n        converted += conversionTable[filename[i]];\n\n      } else if(filename.charCodeAt(i) === 768 || filename.charCodeAt(i) === 769 ) { // accento grave e accento acuto\n        converted += '';\n\n      } else if(filename.charCodeAt(i) > 127 ) {\n        converted += '_';\n\n      } else {\n        converted += filename.charAt(i);\n      }\n    }\n\n    return converted.replace(/ /g, '_').replace(/_+/g, '_');\n  };\n\n  /*\n  buildHiddenFields\n  genera i campi hidden con i valori da restituire al server.\n  Restituisce la stringa dei campi hidden\n  */\n  upl.buildHiddenFields = (current_item, fupl_options) => {\n\n    let hidden_fields = '',\n    field_values = {\n      'tmp_file'  : current_item.tmp_file,\n      'file_name' : normalize_file_name(current_item.file.name),\n      'size'      : current_item.file.size,\n      'type'      : current_item.file.type\n    };\n\n    if(fupl_options._type === 'img') {\n      field_values.width = current_item.width;\n      field_values.height = current_item.height;\n    }\n\n    for (let _key in field_values) {\n      hidden_fields += '<input type=\"hidden\" '+\n        'name=\"' + fupl_options.varname + '[' + current_item.id +'][' + _key + ']\" '+\n        'value=\"' + field_values[_key] +'\">';\n    }\n\n    return '<div class=\"fupl-hiddens\">' + hidden_fields + '</div>';\n\n  };\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n  \"use strict\";\n\n  /*\n    basato su\n    - https://github.com/WolfgangKurz/grabbable\n\n    altri riferimenti:\n    - https://codepen.io/therealDaze/pen/ZaoErp\n    - https://github.com/gridstack/gridstack.js\n    - https://developer.mozilla.org/it/docs/Web/API/HTML_Drag_and_Drop_API\n    - https://www.html5rocks.com/en/tutorials/dnd/basics/\n    - https://kryogenix.org/code/browser/custom-drag-image.html\n  */\n\n  const classes = {\n    // classe aggiunt all'elemento fupl_options.istance_result_wrapper se l'opzione\n    // sortable è attiva\n    wrapper_class: 'fupl-sortable',\n\n    // classe aggiunta all'alemento principale (fupl_options.element) quando\n    // si trascina un elemento. Viene eliminata al dragleave\n    sorting_class: 'fupl-sorting',\n\n    // stesso criterio, ma classe aggiunta all'elemento trascinato\n    sorting_item_class: 'fupl-item-sorting'\n\n  };\n\n  upl.addSortableEvents = (fupl_item, fupl_options) => {\n\n    //TODO creazione ghost corrispondente all'elemento\n    // attualmente l'immagine ghost cambia in base al punto in cui si fa click\n    // per il trasxcinamento\n\n    fupl_item.addEventListener('dragstart', function(e) {\n      // dimensioni dell'elemento\n      this.dataset.wi = this.offsetWidth + 'px';\n      this.dataset.he = this.offsetHeight + 'px';\n\n\n      // aggiunta classe `.fupl-sorting` all'elemento fupl per disattivare il feedback\n      // del drag&drop esterno al browser (vedi scss/_fupl.scss)\n      fupl_options.element.classList.add(classes.sorting_class);\n\n      this.classList.add(classes.sorting_item_class);\n      e.dataTransfer.effectAllowed = 'move';\n      e.dataTransfer.setData('text/html', this.innerHTML);\n\n    }, true);\n\n    fupl_item.addEventListener('dragleave', function() {\n\n      //fupl_options.element.classList.remove(classes.sorting_class);\n\n      //this.classList.remove(classes.sorting_item_class);\n\n    }, true);\n  };\n\n  upl.activateSortable = (fupl_options) => {\n\n    // add classes\n    fupl_options.istance_result_wrapper.classList.add(classes.wrapper_class);\n\n\n\n\n    //TODO ondrop rimuovere da fupl .fupl-sorting\n    //TODO stato disabled\n    //TODO drag icon\n\n  }; // end upl.activateSortable\n\n  return upl;\n\n})(FileUploader2 || {});\n\n\n\n// \tvar customCallback = null;\n\n// \tvar callCallback = function(elem){\n// \t\tif(document.createEventObject) {\n// \t\t\telem.fireEvent(\"ondragged\");\n\n// \t\t} else {\n// \t\t\tvar evt = document.createEvent(\"HTMLEvents\");\n// \t\t\tevt.initEvent(\"dragged\", false, true);\n// \t\t\telem.dispatchEvent(evt);\n\n//       if( customCallback && typeof customCallback === 'function') {\n//         customCallback();\n//       }\n// \t\t}\n// \t};\n\n// \tvar dummy = null, bg = null;\n\t// var createDummy = function(){\n\t// \tbg = document.createElement(\"div\");\n\t// \tbg.style.position = \"absolute\";\n\t// \tbg.style.width = \"1px\";\n\t// \tbg.style.height = \"1px\";\n\t// \tbg.style.overflow = \"hidden\";\n\n\t// \tdummy = document.createElement(\"div\");\n\t// \tdummy.className = \"grabbable-dummy\";\n\t// \tdummy.style.position = \"relative\";\n\t// \tdummy.addEventListener(\"drop\", function(e){\n\t// \t\tvar data = e.dataTransfer.getData(\"text\");\n\t// \t\tif(data!==\"draggable\") return;\n\n\t// \t\te.preventDefault();\n\t// \t\te.stopPropagation();\n\n\t// \t\twhile(bg.children.length>0){\n\t// \t\t\tvar elem = bg.children[0];\n\t// \t\t\tthis.parentNode.insertBefore(elem, this);\n\t// \t\t}\n\n\t// \t\tdummy.style.display = \"none\";\n\t// \t\tcallCallback(dummy.parentNode);\n\t// \t});\n\n\t// \tvar x = document.querySelector(\"body\");\n\t// \tx.appendChild(dummy);\n\t// \tx.appendChild(bg);\n\t// };\n// \tvar updateDummy = function(el){\n\n// /**** fix */\n// \t\tif(bg === null) {\n//   \t\tgrabbableStyle();\n//   \t\tcreateDummy();\n// \t\t}\n// /**** end fix */\n\n// \t\tbg.style.left = el.offsetLeft+\"px\";\n// \t\tbg.style.top = el.offsetTop+\"px\";\n// \t\tdummy.style.width = el.offsetWidth+\"px\";\n// \t\tdummy.style.height = el.offsetHeight+\"px\";\n\n// \t\tvar style = window.getComputedStyle(el);\n// \t\tdummy.style.display = style.display;\n// \t\tdummy.style.margin = style.marginTop+\" \"+style.marginRight+\" \"+style.marginBottom+\" \"+style.marginLeft;\n// \t\tdummy.style.padding = style.paddingTop+\" \"+style.paddingRight+\" \"+style.paddingBottom+\" \"+style.paddingLeft;\n// \t};\n// \tvar initGrabbable = function(){\n// \t\tgrabbableStyle();\n// \t\tcreateDummy();\n// \t};\n\n// \tvar prevent = function(e){\n// \t\te.preventDefault();\n// \t\te.stopPropagation();\n// \t};\n// \tvar allowDrop = function(e){\n// \t\te.preventDefault();\n\n// \t\te.stopPropagation();\n\n// \t\tif(this.previousElementSibling!==dummy)\n// \t\t\tthis.parentNode.insertBefore(dummy, this);\n// \t\telse\n// \t\t\tthis.parentNode.insertBefore(dummy, this.nextElementSibling);\n// \t};\n// \tvar dragOn = function(e){\n// \t\te.dataTransfer.setData(\"text\", \"draggable\");\n// \t};\n// \tvar resetDrop = function(e){\n// \t\tvar data = e.dataTransfer.getData(\"text\");\n// \t\tif(data!==\"draggable\") return;\n\n// \t\tprevent(e);\n\n// \t\twhile(bg.children.length>0){\n// \t\t\tvar elem = bg.children[0];\n// \t\t\tdummy.parentNode.insertBefore(elem, dummy);\n// \t\t}\n// \t\tdummy.style.display = \"none\";\n// \t\tcallCallback(dummy.parentNode);\n// \t};\n\n// \tif(document.readyState===\"complete\") {\n//   \tinitGrabbable();\n// \t} else {\n//   \tdocument.addEventListener(\"DOMContentLoaded\", function(){ initGrabbable(); });\n//   }\n\n// \tHTMLElement.prototype.grabbable = function( userCallback ){\n// \t\tif( (\" \"+this.className+\" \").indexOf(\" grabbable \")<0 )\n// \t\t\tthis.className += \" grabbable\";\n\n// \t\tif( userCallback && typeof userCallback === 'function' ) {\n//   \t\tcustomCallback = userCallback;\n// \t\t}\n\n// \t\tfor(var i=0; i<this.children.length; i++){\n// \t\t\tvar el = this.children[i];\n// \t\t\tif(typeof el.draggabled===\"undefined\"){\n// \t\t\t\tif(el===dummy) continue;\n\n// \t\t\t\tel.draggable = true;\n\n// \t\t\t\tel.addEventListener(\"dragstart\", dragOn);\n// \t\t\t\tel.addEventListener(\"dragover\", allowDrop);\n// \t\t\t\tel.addEventListener(\"drag\", function(){\n// \t\t\t\t\tif(this.parentNode===bg) return;\n// \t\t\t\t\tif(this===dummy) return;\n// \t\t\t\t\tupdateDummy(this);\n// \t\t\t\t\tthis.parentNode.insertBefore(dummy, this);\n// \t\t\t\t\tbg.appendChild(this);\n// \t\t\t\t});\n// \t\t\t\tel.addEventListener(\"drop\", function(e){\n// \t\t\t\t\tprevent(e);\n// \t\t\t\t\tif(document.createEventObject) {\n//   \t\t\t\t\tdummy.fireEvent(\"ondrop\", e);\n// \t\t\t\t\t} else {\n//   \t\t\t\t\tdummy.dispatchEvent(new DragEvent(e.type, e));\n//   \t\t\t\t}\n// \t\t\t\t});\n// \t\t\t\tel.draggabled = true;\n// \t\t\t}\n// \t\t}\n\n// \t\tif(typeof document.draggabled===\"undefined\"){\n// \t\t\tdocument.addEventListener(\"dragover\", prevent);\n// \t\t\tdocument.addEventListener(\"drop\", resetDrop);\n// \t\t\tdocument.draggabled = true;\n// \t\t}\n// \t};\n// }();\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n  \"use strict\";\n\n\n  /**\n\t * create_info_text\n\t * (funzione) Genera la stringa riepilogativa delle limitazioni da rispettare\n\t * per la selezione dei file\n\t *\n   * - Restituisce la stringa informativa\n\t */\n\tupl.create_info_text = fupl_options => {\n    let info_text = [];\n\n    if( fupl_options.filetype === 'img' ) {\n      info_text.push( 'immagini in formato <strong>JPEG</strong>, <strong>PNG</strong>, <strong>GIF</strong> o <strong>WEBP</strong>' );\n\n      if( fupl_options.img_w && fupl_options.img_h ) {\n        info_text.push( 'dimensioni: <strong>' +  fupl_options.img_w + '&times;' + fupl_options.img_h + 'px</strong>');\n\n      } else {\n\n        if(fupl_options.img_w && fupl_options.img_h && fupl_options.img_w === fupl_options.img_h) {\n          info_text.push( 'larghezza e altezza <strong>' +  fupl_options.img_h + 'px</strong>');\n\n        } else if(fupl_options.img_min_w && fupl_options.img_min_h && fupl_options.img_min_w === fupl_options.img_min_h) {\n          info_text.push( 'larghezza e altezza non inferiori a <strong>' +  fupl_options.img_min_w + 'px</strong>');\n\n        } else if(fupl_options.img_max_w && fupl_options.img_max_h && fupl_options.img_max_w === fupl_options.img_max_h) {\n          info_text.push( 'larghezza e altezza non superiori a <strong>' +  fupl_options.img_max_w + 'px</strong>');\n\n        } else {\n\n          if( fupl_options.img_w ) {\n            info_text.push( 'larghezza <strong>' +  fupl_options.img_w + 'px</strong>');\n\n          } else if( fupl_options.img_min_w && fupl_options.img_max_w ) {\n            info_text.push( 'larghezza compresa tra <strong>' +  fupl_options.img_min_w + 'px</strong> e <strong>' + fupl_options.img_max_w + 'px</strong>');\n\n          } else if( fupl_options.img_min_w ) {\n            info_text.push( 'larghezza non inferiore a <strong>' +  fupl_options.img_min_w + 'px</strong>');\n\n          } else if( fupl_options.img_max_w  ) {\n            info_text.push( 'larghezza non superiore a <strong>' +  fupl_options.img_max_w + 'px</strong>');\n          }\n\n          if( fupl_options.img_h ) {\n            info_text.push( 'altezza <strong>' +  fupl_options.img_h + 'px</strong>');\n\n          } else if( fupl_options.img_min_h && fupl_options.img_max_h ) {\n            info_text.push( 'altezza compresa tra <strong>' +  fupl_options.img_min_h + 'px</strong> e <strong>' + fupl_options.img_max_h + 'px</strong>');\n\n          } else if( fupl_options.img_min_h ) {\n            info_text.push( 'altezza non inferiore a <strong>' +  fupl_options.img_min_h + 'px</strong>');\n\n          } else if( fupl_options.img_max_h  ) {\n            info_text.push( 'altezza non superiore a <strong>' +  fupl_options.img_max_h + 'px</strong>');\n          }\n        }\n      }\n\n    } else if( fupl_options.filetype === 'pdf' ) {\n      info_text.push( 'file in formato <strong>PDF</strong>' );\n    }\n\n    if( fupl_options.max_filesize !== null ) {\n      info_text.push( 'max <strong>' + fupl_options.max_filesize.feedback_size + '</strong>' );\n    }\n\n    let str = info_text.join(fupl_options.info_text_join_string);\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n\n    if(fupl_options.info_text_wrap_string && str) {\n      str = fupl_options.info_text_wrap_string[0] + str + fupl_options.info_text_wrap_string[1];\n    }\n    return str;\n\t};\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ( (upl) => {\n\n  // parametri di default condivisi da tutte le istanze\n  const default_options = {\n\n    /*\n    silent_degradation\n    se true e il browser non ha le funzionalità richieste, fileuploader\n    non dà nessun messaggio di errore ed è possibile gestire l'upload dei file con\n    un classico input file. È però necessario che sia presente nel markup\n    (all'interno dell'elemento a cui si istanzia l'uploader) e che la cosa sia\n    gestita anche lato server\n    */\n    silent_degradation: false,\n\n    // callback da richiamere se viene rilevato un browser non adatto\n    unsuitable_browser_callback: null,\n\n    // percorso del css FileUploader\n    css: null,\n\n    // Attiva la modalità debug che mostra in console le informazioni\n    // sulla configurazione corrente\n    debug: false,\n\n    // locales string, usata per la formattazione della stringa numerica\n    // mostrata all'utente ricavata da `max_filesize`\n    locales: 'it-IT',\n\n    /*\n    Se true impedisce il caricamento di elementi\n    NB: in questa versione di FileUploader non eiste una vera gestione dello stato disabled,\n    la modifica di questa parametro influisce solo inizialmente sull'evento drag&drop\n    e sull'impostazione dello stato disabled del fieldset che racchiude l'uploader (.fupl-wrapper).\n    Eventuali modifiche \"in corsa\" dello stato disabled vanno gestite dalle singole applicazioni\n    agendo sull'attributo disabled dell'elemento fieldset.fupl-wrapper\n\n    Il parametro disabled può essere impostato anche tramite attributo dell'elemento\n    input[type=file] di fallback, se presente\n\n    La presenza dell'attributo disabled nell'elemento .fupl-wrapper disabilita l'elemento\n    input[type=file] generato da FileUploader (comportamento std di HTML 5) e impedisce il drag&drop\n    */\n    disabled: false,\n\n    // Interfaccia per l'invio di messaggi di errore\n    // mes  →  chiave dell'oggetto `alert_messages` con il testo del messaggio di errore\n    // type →  uno tra info, error, warning\n    // opts →  l'oggetto file uploader options corrente\n    alert_api: (mes, opts, type = 'error') => { window.alert(mes.replace(/(<([^>]+)>)/ig,\"\"));}, // eslint-disable-line\n\n    // testo dei messaggi errore\n    // eventuali segnaposti sono sotituiti nell'applicazione\n    alert_messages: {\n      // messaggio browser non compatibile\n      unsuitable_browser: 'Il tuo browser non ha tutte le funzionalità richieste ' +\n      'da questa applicazione.\\n' +\n      'Utilizza la versione più recente di Firefox, Edge, Safari, Opera o Chrome',\n\n      too_much_files: 'Puoi selezionare un solo file!', // tentativo di trascinare più file con uploader singolo\n      xhr_error: 'Si &egrave; verificato un errore nel caricamento del file “<strong>{{file_name}}</strong>”.', // errore ajax\n      file_format_error: 'Il file “<strong>{{file_name}}</strong>” è di un formato non consentito',\n      file_size_error: 'Le dimensioni di “<strong>{{file_name}}</strong>” ({{file_size}}) '+\n        'superano il valore massimo consentito ({{allowed_size}})',\n\n      // immagini\n      img_err_start_string: \"L'immagine “<strong>{{file_name}}</strong>” non è corretta:\",\n      img_exact_width_err: \"Larghezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_min_width_err: \"Larghezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_max_width_err: \"Larghezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_exact_height_err: \"Altezza non corrispondente ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_min_height_err: \"Altezza inferiore a quella minima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)\",\n      img_max_height_err: \"Altezza superiore a quella massima consentita ({{image_dimension}}px invece di {{allowed_dimension}}px)\"\n    },\n\n    // Url dello script lato server che esegue il caricamento del file\n    // per l'istanza in esame. Ha la precedenza sull'impostazione globale\n    // obbligatorio\n    uploader_url: null,\n\n    // Tipologia dei file selezionabili\n    // il valore deve corrispondere ad una delle chievi dell'array `mimetypes`\n    filetype: 'auto',\n\n    /*\n    Stringa di estensioni o mimetypes separati da virgola accettabili per l'uploader\n    corrente in aggiunta o sostituzione di quanto impostato tramite il parametro `filetype`.\n\n    L'eventuale attributo `accept` del campo input contenuto\n    nel contenitore uploader (se presente), svolge la stessa funzione.\n\n    In entrambi i casi, i valori sono presi in considerazione solo se `filetype == 'auto'`\n\n    In presenza sia del parametro che dell'attributo `accept`, viene effettuato un merge,\n    e l'attributo ha la precedenza sul parametro.\n    Se il parametro è `null` e l'attributo `accept` non è presente,\n    con `filetype == auto` vengono accettati tutti i tipi di file.\n    */\n    accept: null,\n\n    /*\n    Parametro multiple.\n    Attiva la possibilità di acquisire più file con lo stesso uploader.\n    L'attivazione di questa opzione può essere effettuata anche tramite il parametro\n    del campo `input` /se presente)\n    */\n    multiple: false,\n\n    /*\n    Parametro required.\n    Eventuale impostazione del campo come obbligatorio.\n    L'attivazione di questa opzione può essere effettuata anche tramite il parametro\n    del campo `input` /se presente)\n    */\n    required: false,\n\n    /*\n    Disabilita (se presente) il form in cui è incluso l'uploader (disabilita anche il pulsante submit)\n    da usare solo se nel form non sono presenti altri interazioni che potrebbero\n    entrare in collisione con questa opzione\n    */\n    disable_submit: false,\n\n    /*\n      Template dei markup utilizzati\n      - `main`         : markup principale inserito dentro l'elemento indicato da\n                         `upl.global_options.selector`. L'elemento, a cui viene inoltre\n                         aggiunta la classe `flup`, viene inoltre racchiuso in un elemento\n                         `div.flup-wrapper`\n\n      - `single_img`   : template aggiuntivo per immagini singole\n      - `multiple_imgs`: template aggiuntivo per immagini multiple\n      - `single_doc`   : template aggiuntivo per documenti singoli\n      - `multiple_docs`: template aggiuntivo per documenti multipli\n      - `no_file`      : template per indicare l'assenza di file\n\n      Consulta il readme per ulteriori dettagli.\n\n      Il markup di default utilizza classi di Boostrap 4.\n\n      L'eventuale contenuto dell'elemento originale viene eliminato (può contenere\n      un elemento input[type=file] per eventuale procedura di fallback)\n\n      I template possono essere alterati a piacimento, purché si mantengano le classi\n      `fupl-*` utilizzate nella procedura.\n\n      I template delle immagini, devono contenere il tag img\n\n      doc e img multipli possono essere null, in questo caso vengono utilizzati\n      gli stessi markup per singolo file\n    */\n    templates: {\n      // wrapped in <div class=\"fupl-wrapper\"><div class=\"fupl\"></div></div>\n      main: '<div class=\"fupl-result\"></div>' +\n        '<div class=\"fupl-panel\">' +\n          '<div class=\"fupl-button\">' +\n            '<label><input type=\"file\"></label>' +\n            '<div class=\"fupl-dd-text\">{</div>' +\n          '</div>' +\n          '<div class=\"fupl-info-text\"></div>' +\n        '</div>',\n\n      // contenuto di fupl-result quando non sono presenti files\n      no_file: {\n        img: '<div class=\"fupl-result-empty text-muted small font-italic\">Nessuna immagine presente</div>',\n        doc: '<div class=\"fupl-result-empty text-muted small font-italic\">Nessun file presente</div>'\n      },\n\n      // trigger per la rimozione di un elemento da .fupl_results\n      // è aggiunto all'interno dell'elemento `.fupl-remove`, presente in ognuno\n      // degli elementi successivi\n      // Deve essere un elemento button\n      remove_btn: '<button type=\"button\" class=\"close fupl-remove-trigger\" aria-label=\"Elimina\" title=\"Elimina questo file\">' +\n            '<span aria-hidden=\"true\">&times;</span>' +\n          '</button>',\n\n      // markup aggiunto agli elementi in fase di caricamento\n      loading_element: '<div class=\"fupl-loading\"><progress class=\"fupl-progress\" max=100 value=0></progress></div>',\n\n      // feedback di caricamento alternativo se progress.lengthComputable == false\n      // se necessario e se la funzione `alternate_loading_func` non è presente,\n      // sostituisce l'elemento `.fupl-progress`\n      // l'attributo `draggable=\"false\"` risolve potenziali conflitti se si attiva\n      // l'opzione `sortable`\n      alternate_loading_progress: '<div class=\"spinner-grow text-primary\" role=\"status\">' +\n          '<span class=\"sr-only\">Loading...</span></div',\n\n      img: {\n        single: '<div class=\"fupl-item\">' +\n          '<div class=\"fupl-remove\"></div>' +\n          '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\">' +\n          '<div class=\"fupl-file-info\">' +\n            '<div class=\"text-truncate fupl-file-name\"></div>' +\n            '<div class=\"fupl-file-size\"></div>' +\n          '</div>' +\n        '</div>',\n\n        multiple: '<div class=\"fupl-item\">' +\n            '<div class=\"fupl-remove\"></div>' +\n            '<div class=\"fupl-img-wrapper\">' +\n              '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\" draggable=\"false\">' +\n            '</div>' +\n            '<div class=\"fupl-file-info\">' +\n              '<div class=\"text-truncate fupl-file-name\"></div>' +\n              '<div class=\"fupl-file-size\"></div>' +\n            '</div>' +\n          '</div>'\n      },\n\n      doc : {\n        single: '<div class=\"fupl-item\">' +\n            '<div class=\"fupl-remove\"></div>' +\n            '<div class=\"fupl-doc text-truncate\">' +\n              '<a href=\"#\" class=\"text-truncate fupl-file-name fupl-url\" draggable=\"false\"></a>' +\n            '</div>' +\n            '<span class=\"small ml-1 text-nowrap fupl-file-size\"></span>' +\n          '</div>',\n\n        multiple: null // usa single_doc\n      }\n    },\n\n    // Eventuale classi da aggiungere all'elemento wrapper di FileUploader\n    // (stringa separata da spazi)\n    wrapper_extra_class: null,\n\n    // Classe da aggiungere all'elemento FileUploader quando un file\n    // vi è trascinato sopra\n    element_dragover_class: 'fupl-is-dragover',\n\n    // Opzione per l'aggiunta di un tag legend prima dell'elemento uploader\n    uploader_legend: true,\n\n    // tetso dell'elemento legend da applicare da applicare all'elemento FileUploader.\n    // Se `null` e se esiste un elemento `label` all'interno dell'uploader,\n    // viene preso il testo dell'elemento\n    uploader_legend_text: null,\n\n    // Eventuale classe da aggiungere ad uploader_legend\n    uploader_legend_class: null,\n\n    /*\n    Array (o stringa json) dei testi del label del tag input (il primo elemento dell'array) e del testo\n    informativo per il drag&drop da inserire in `.fupl-dd-text` (il secondo elemento)\n    nelle varie combinazioni (img singola e multiple, doc singole e multipli)\n    segnaposti: ['{{input_label}}', '{{dd_text}}']\n    */\n    input_text: {\n      img: {\n        single:   [\"Seleziona un'immagine\", \"\\u2026oppure trascinala qui\"],\n        multiple: [\"Seleziona una o pi&ugrave; immagini\", \"\\u2026oppure trascinale qui\"]\n      },\n      doc: {\n        single: [\"Seleziona un documento\", \"\\u2026oppure trascinalo qui\"],\n        multiple: [\"Seleziona uno o pi&ugrave; documenti\", \"\\u2026oppure trascinali qui\"]\n      }\n    },\n\n    // classi da applicare al tag label dell'input[file] generato, utilizzato\n    // come pulsante per la selezione dei file\n    input_label_class: 'btn btn-outline-primary btn-sm',\n\n    // indica se mostrare o no il testo informativo su formati accettati,\n    // dimensioni immagini, ecc. Se si decide di non mostrarlo, potrebbe essere\n    // necessario rimuovere dal template l'elemento `.fupl-info-text`\n    show_info_text: true,\n\n    // stringhe aggiunte all'inizio e alla fine del testo informativo generato\n    // utilizzate solo se `custom_info_text` non è impostato\n    info_text_wrap_string: ['(', ')'],\n\n    // Stringa utilizzata per concatenare tra loro le varie parti del testo informativo generato\n    // utilizzata solo se `custom_info_text` non è impostato\n    info_text_join_string: ', ',\n\n    // Eventuale testo informativo personalizzato. se presente,\n    // sostituisce il testo generato in base ai formati, ai limiti di dimensioni, ecc.\n    custom_info_text: null,\n\n    /*\n    impostazioni per le immagini.\n    Applicate solo se filetype == 'img'.\n    Valori numerici che corrispondono alle dimensioni in pixel richieste per l'immagine.\n    I parametri img_min_* e img_max_* possono essere assegnati simultaneamente,\n    ma sono ignorati se esistono i corrispondenti parametri esatti (ad esempio,\n    se è presente img_w, i parametri img_min_w e img_max_w non vengono presi in considerazione).\n    Il valore di default di tutti i parametri è null, che significa che non vengono applicati.\n\n      * `img_min_w`: larghezza minima dell'immagine\n      * `img_max_w`: larghezza massima dell'immagine\n      * `img_w`: larghezza esatta dell'immagine\n      * `img_min_h`: altezza minima dell'immagine\n      * `img_max_h`: altezza massima dell'immagine\n      * `img_h`: altezza esatta dell'immagine\n    */\n    img_min_w   : null,\n    img_max_w   : null,\n    img_w       : null,\n    img_min_h   : null,\n    img_max_h   : null,\n    img_h       : null,\n\n\n    /*\n    Dimensione (peso) massima dell'immagine. Può essere un numero,\n    e in questo caso corrisponde ad una dimensione in KB, o una stringa\n    composta da un valore numerico e da un suffisso tra ‘KB’ e ‘MB’ (anche minuscoli).\n    Se il valore è null o se la stringa non viene riconosciuta,\n    non è applicato nessun limite.\n    */\n    max_filesize: null,\n\n    // Prefisso della variabile utilizzata per inviare al server i dati\n    // di ogni singolo file caricato. Il valore indicato è il nome base dell'array\n    // costruito per inviare i valori al server.\n    varname: 'file',\n\n    // Funzione richiamata dopo l'inizializzazione di ogni elemento FileUploader.\n    // La funzione viene invocata con l'oggetto di tutte le opzioni come argomento\n    init_callback: null,\n\n    /*\n    Funzione richiamata ogni volta che un file viene inviato al server.\n    La funzione viene invocata passandole un oggetto contenente:\n      * `item`: oggetto con i dati dell'elemento in esame:\n        - id: id univoco dell'elemento\n        - file: oggetto filelist corrente\n        - `width` e `height`: null o dimensioni in pixel dell'immagine\n        - `tmp_file`: nel caso di nuovi elementi: nome del file temporaneo\n      * `img_preview` : miniatura dell'immagine in forma di stringa Base64\n        (null se si tratta di altre tipologie)\n      * `fupl_options`: oggetto `options` corrente\n    */\n    upload_start_callback: null,\n\n    /*\n    Funzione richiamata ogni volta che un file viene caricato.\n    La funzione viene invocata passandole un oggetto contenente:\n      * `item`: oggetto con i dati dell'elemento in esame:\n        - `id`: id univoco dell'elemento\n        - `file`: oggetto filelist\n        - `width` e `height`: null o dimensioni in pixel dell'immagine\n        - `tmp_file`: nel caso di nuovi elementi: nome del file temporaneo\n      * `server_error`: null, se l'upload è stato completato correttamente. oppure\n          stringa con il messaggio di errore restituito\n      * `fupl_options`: oggetto `options` corrente\n    */\n    upload_complete_callback: null,\n\n    /*\n      Funzione di visulizzazione alternativa del progresso di caricamento\n      Se presente, viene sostituita a quella standard.\n      Viene invocata con due parametri:\n        - `progress_event`: evento progress del caricamento\n        - `fupl_options`: oggetto `options` corrente\n    */\n    alternate_loading_func: null,\n\n    /*\n    Array json degli eventuali elementi preregistrati, nella forma:\n      [\n        {\n          rel_id → eventuale id del record relazionato al file (può essere null o assente)\n                   se esiste, viene utilizzato al posto di `id` per indicare il record da cancellare\n          id     → identificativo univoco del file (può essere anche il percorso sul server)\n          name   → nome del file\n          url    → url per eventuale tag <a> presente nell'elemento (se immagine può essere assente o null)\n          src    → attributo `src` obbligatorio se immagine, oppure assente o null\n          wi     → larghezza in px se immagine oppure assente o null\n          he     → altezza in px se immagine oppure assente o null\n          size   → dimensione in bytes\n          [...]  → eventuali campi aggiuntivi specifici dell'istanza\n        }\n        [...]\n      ]\n\n      l'id viene aggiunto come attributo `data` al pulsante di eliminazione del file\n      (genera un hidden con l'id del file da eliminare dal server)\n    */\n    values: [],\n\n    // varname degli hidden con gli id dei file già registrati  da eliminare\n    delete_varname: 'elimina_file[]',\n\n    // ========================================\n    // OPZIONE DI RIORDINO DEGLI ELEMENTI\n    // ========================================\n    /*\n      Attiva la possibilità di riordinare gli elementi trascinandoli.\n      - La funzione aggiunge la variabile definita in `reorder_varname` a\n        quelle inviate con le altre procedure.\n      - L'opzione di reorder si attiva se il parametro reorder è true e solo se\n        il parametro multiple è true e il parametro sortable_varname è presente\n      - Se l'opzione è attiva, i valori degli eventuali elementi preregistrati\n        devono essere forniti nel json `values` nell'ordine corretto\n\n        Vedi `demo/reorder_demo.html` per un esempio di utilizzo\n    */\n    sortable: false,\n\n    // name della variabile hidden usata per registrare l'ordinamento\n    sortable_varname: 'order'\n\n    // ========================================\n    // GESTIONE CAMPI AGGIUNTIVI\n    // ========================================\n// TODO\n  };\n\n  upl.setOptions = (...custom_options) => {\n\n    if( Object.assign && typeof Object.assign === \"function\") {\n      return Object.assign(\n        {},\n        default_options,\n        ...custom_options\n      );\n\n    } else { // IE 11, necessario anche se non c'è il supporto IE\n      let opts = {};\n      for(let i in default_options) {\n        opts[i] = default_options[i];\n        custom_options.forEach( item => {\n          if(item[i] !== undefined) {\n            opts[i] = item[i];\n          }\n        });\n      }\n      return opts;\n    }\n  };\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  // mimetypes ed estensioni accettabili in base al parametro `filetype`.\n  // Il parametro `auto` accetta tutti i tipi di file (salvo eventuali limitazioni\n  // aggiunte tramite parametro e attributo `accept`)\n  upl.mimetypes = {\n    auto : null,\n    img  : ['image/png', 'image/jpeg', 'image/pjpeg', 'image/gif', 'image/webp',\n            '.png', '.jpg', '.jpeg', '.pjpg', '.pjpeg', '.gif', '.webp'],\n    pdf  : ['application/pdf', '.pdf']\n  };\n\n  // nomi degli attributi data utilizzati per controllare alcuni stati o eventi dell'uploader\n  upl.data_attributes = {\n    fupl_selector : 'file_uploader2', // nome dell'attributo data usato come selector (e acui si possonoa ssociare delle opzioni json)\n    required      : 'required', // true se il caricamento del file è obbligatorio\n    hasValues     : 'hasValues', // true se l'uploader congtiene dei file (prergistrati o meno)\n    item_id       : 'id' // id dell'elemento aggiunto all'uploader (se preregistrato)\n  };\n\n  upl.set_has_values = fupl_options => {\n    let items = fupl_options.istance_result_wrapper.querySelectorAll('.fupl-item').length;\n    fupl_options.wrapper.dataset[upl.data_attributes.hasValues] = items? 'true' : 'false';\n    if(!items) {\n      fupl_options.istance_result_wrapper.innerHTML = fupl_options.templates.no_file[fupl_options._type];\n    }\n  };\n\n\n  upl.parse_filesize = (bytes, locales) => {\n    bytes = +bytes;\n    let mega = 1024*1024;\n    if(bytes >= mega ) {\n      return (bytes/mega).toLocaleString(locales, {maximumFractionDigits: 1}) + '<span class=\"fupl-unit\">MB</span>';\n    } else {\n      return Math.round(bytes/1024).toLocaleString(locales, {maximumFractionDigits: 0}) + '<span class=\"fupl-unit\">KB</span>';\n    }\n  };\n\n\n  /*\n   parse_max_filesize\n   elabora il parametro `filesize_value` (se esiste) e restituisce:\n    - `null` se `filesize_value` === null`\n    - `false` se `filesize_value` non è un valore corretto\n    - l'oggetto `{ maxbytes: 123456, unit: 'KB', feedback_size: ''}`\n    in cui:\n      - `maxbytes` è il valore in bytes del limite imposto\n      - `unit` è uno tra 'KB' e 'MB'\n      - `feedback_size` è la rappresentazione per un eventuale feedback per l'utente\n  */\n  upl.parse_max_filesize = (filesize_value, locales) =>  {\n    // controllo max_filesize ed elaborazione parametro\n    if( filesize_value ) {\n      var maxbytes, unit, feedback_size;\n\n      if(!isNaN(filesize_value)) { //solo numero, si assume siano KB\n        maxbytes = +filesize_value;\n        unit = 'KB';\n        feedback_size = maxbytes;\n\n      } else {\n\n        unit = filesize_value.substr(-2, 2).toUpperCase();\n        maxbytes = +filesize_value.substr(0, filesize_value.length-2);\n        feedback_size = maxbytes;\n\n        if(isNaN(maxbytes) || (unit !== 'KB' && unit !== 'MB') ) {\n          return false;\n        }\n      }\n\n      // se l'unità è indicata in KB ma il valore è più grande\n      // di un MB, il parametro viene aggiornato\n      if( maxbytes >= 1024 && unit === 'KB') {\n        unit = 'MB';\n        feedback_size = (Math.round((maxbytes / 1024) * 100) /100);\n      }\n\n      if(unit === 'KB') {\n        maxbytes = maxbytes * 1024;\n      } else {\n        maxbytes = maxbytes * 1024 * 1024;\n      }\n\n      return {\n        //'original_value': filesize_value,\n        //'unit'         : unit,\n        'maxbytes'     : maxbytes,\n        'feedback_size': feedback_size.toLocaleString(\n          locales, {maximumFractionDigits: (unit === 'KB'? 0 : 1)}\n        ) + '<span class=\"fupl-unit\">' + unit + '</span>'\n      };\n\n    } else {\n      return null;\n    }\n  };\n\n  return upl;\n\n})(FileUploader2 || {});\n"]}