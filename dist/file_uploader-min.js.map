{"version":3,"sources":["../js/file_uploader.js","../js/_init.js","../js/_create_uploader.js","../js/_create_item.js","../js/_add_new_file_events.js","../js/_send_files.js","../js/_build_hidden_fields.js","../js/_create_info_text.js","../js/_set_options.js","../js/_utility_funcs.js"],"names":["FileUploader2","upl","isSuitableBrowser","div","document","createElement","window","init","user_global_options","global_options","setOptions","css","head","insertAdjacentHTML","querySelectorAll","data_attributes","fupl_selector","forEach","upl_element","element_all_dataset","dataset","fupl_dataset","fupl_options","JSON","parse","element","uploader_url","Error","filetype","toLowerCase","Object","keys","mimetypes","indexOf","e","console","error","json_params","i","item","concat","log","createUploader","alert","unsuitableBrowserMessage","_input","querySelector","original_label","accept_attr","accept_params","accept","split","map","trim","getAttribute","_toConsumableArray","Set","max_filesize","parse_max_filesize","locales","_fupl_options$element","_fupl_options$istance","multiple","Boolean","hasAttribute","required","_type","_mode","uploader_label_text","innerHTML","classList","add","wrapper","parentNode","insertBefore","appendChild","element_class","apply","uploader_add_label","_class","uploader_label_class","push","length","join","templates","main","istance_input","istance_label","istance_dd_text","istance_info_text","istance_result_wrapper","setAttribute","input_text","input_label_class","show_info_text","custom_info_text","create_info_text","values","createItem","hasValues","no_file","addNewItemHandlers","init_callback","debug","groupCollapsed","c_options","c_keys","sort","_toStringify","_typeof","stringify","table","groupEnd","item_data","remove_btn","fupl_file_name","name","fupl_file_size","size_string","wi","he","size","parse_filesize","src","fupl_url","url","href","id","item_id","addEventListener","remove","delete_varname","eventName","preventDefault","stopPropagation","element_dragover_class","files","dataTransfer","alert_api","alert_messages","tooMuchFiles","sendFiles","filelist","sendAjaxRequest","current_item","callback","ajax","XMLHttpRequest","show_error","error_message","status","statusText","responseText","open","onload","response","hidden_fields","buildHiddenFields","tmp_file","upload_complete_callback","server_error","xhrError","onerror","fileData","FormData","append","file","send","disable_submit","modo","_form","closest","submit_btns","btn","disabled","submitHandler","removeEventListener","idx","Date","ext","pop","type","fileFormatError","replace","maxbytes","item_parsed_size","fileSizeError","feedback_size","errormessage","info_text","img_w","img_h","img_min_w","img_min_h","img_max_w","img_max_h","str","info_text_join_string","charAt","toUpperCase","slice","info_text_wrap_string","default_options","mes","opts","arguments","undefined","img","doc","single","varname","upload_start_callback","reorder","reorder_varname","_len","custom_options","Array","_key","assign","_ret","_loop","v","auto","pdf","bytes","mega","toLocaleString","maximumFractionDigits","Math","round","filesize_value","unit","isNaN","substr"],"mappings":"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","sourcesContent":["/*!@preserve\n *\n * FileUploader 2.0\n * HTML5 / JS Async Uploader\n * Massimo Cassandro 2017-2019\n *\n */\n\n/* eslint no-console: 0, no-unused-vars: 0, no-empty:  0 */\n/* exported FileUploader2 */\n\n/*\n@codekit-append '_utility_funcs.js'\n@codekit-append '_set_options.js'\n@codekit-append '_create_info_text.js'\n@codekit-append '_reorder.js'\n@codekit-append '_build_hidden_fields.js'\n@codekit-append '_send_files.js'\n@codekit-append '_add_new_file_events.js'\n@codekit-append '_create_item.js'\n@codekit-append '_create_uploader.js'\n\n@codekit-append '_init.js'\n\n*/\n\"use strict\";\nvar FileUploader2 = (() => {\n  \"use strict\";\n  let upl = {};\n\n  return upl;\n})();\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  // VARIABILI E METODI PRIVATI\n  /*\n    isSuitableBrowser\n    Verifica che il browser sia in grado di gestire le funzionalità richieste.\n    Restituisce `true` o `false`\n  */\n  const isSuitableBrowser = () => {\n    var div = document.createElement( 'div' );\n    return ( ( 'draggable' in div ) || ( 'ondragstart' in div && 'ondrop' in div ) )\n      && 'FormData' in window\n      && 'FileReader' in window;\n  };\n\n\n  /*\n    init\n    Seleziona gli elementi con l'attributo `fupl_selector` e avvia FileUploader\n    `user_global_options` è l'oggetto istanziato al momento di avviare FileUploader2,\n    ha la stessa struttura di `default_options` (definito in _set_options.js)\n    e può sovrascrivere ogni suo elemento\n  */\n  upl.init = (user_global_options) => {\n\n    const global_options = upl.setOptions(user_global_options);\n\n    // verifica che il browser sia compatibile\n    if( !isSuitableBrowser() ) {\n      alert(global_options.unsuitableBrowserMessage);\n      return;\n    }\n\n    // caricamento CSS\n    if(global_options.css) {\n      document.head.insertAdjacentHTML('beforeend',\n        '<link rel=\"stylesheet\" href=\"' + global_options.css + '\" type=\"text/css\" media=\"all\">'\n      );\n    }\n\n    // istanze uploader\n    document.querySelectorAll('[data-' + upl.data_attributes.fupl_selector + ']').forEach( upl_element => {\n\n      /*\n        merge dei parametri inseriti tramite attributi `data`, in cui:\n\n        * `upl_element.dataset`:\n            tutti gli attributi inseriti singolarmente (es. data-filetype=\"img\")\n\n        * `upl_element.dataset[upl.data_attributes.fupl_selector]`:\n            attributi inseriti tramite json assegnato a `data- + 'upl.data_attributes.fupl_selector'`\n            (es data-file_uploader2='{\"filetype\":\"img\"}')\n\n        In caso di conflitto prevalgono gli ultimi\n      */\n\n      let element_all_dataset = upl_element.dataset,\n      fupl_dataset = upl_element.dataset[upl.data_attributes.fupl_selector],\n      fupl_options = {};\n\n      if(element_all_dataset === '') {\n        element_all_dataset = {};\n      }\n\n      if(fupl_dataset === '') {\n        fupl_dataset = {};\n      } else {\n        fupl_dataset = JSON.parse(fupl_dataset);\n      }\n\n      fupl_options = upl.setOptions(\n        global_options,\n        fupl_dataset,\n        element_all_dataset\n      );\n\n      // cancella la chiave `upl.data_attributes.fupl_selector`\n      // (al solo scopo di ridurre la confusione)\n      delete fupl_options[upl.data_attributes.fupl_selector];\n\n      // aggiunta dell'elemento stesso ad  `fupl_options`:\n      fupl_options.element = upl_element;\n\n      // controllo parametri e avvio uploader\n      try {\n        //  controllo url\n        if( !fupl_options.uploader_url ) {\n          throw new Error( \"Parametro `uploader_url` non impostato\" );\n        }\n\n        //  controllo parametro filetype\n        fupl_options.filetype = fupl_options.filetype.toLowerCase();\n        if( Object.keys(upl.mimetypes).indexOf(fupl_options.filetype) === -1 ) {\n          throw new Error( \"Parametro `filetype` non corretto\" );\n        }\n      } catch(e) {\n        console.error( e );// eslint-disable-line\n      }\n\n      // parametri che devono essere array e che potrebbero essere presenti\n      // come attributi data (stringa)\n      const json_params = [\n        'input_text',\n        'templates',\n        'info_text_wrap_string',\n        'values'\n      ];\n      json_params.forEach(item => {\n        try {\n          if(typeof fupl_options[item] === 'string' ) {\n            fupl_options[item] = JSON.parse(fupl_options[item]);\n          }\n        } catch(e) {\n          console.error(`L'elemento “${item}” non è un json valido`); // eslint-disable-line\n          console.log(fupl_options.element); // eslint-disable-line\n          console.error( e );// eslint-disable-line\n        }\n      });\n\n      // interpretazione automatica di tutti i parametri booleani o null\n      for(let i in fupl_options) {\n        if(typeof fupl_options[i] === 'string' &&\n          ['true', 'false', 'null'].indexOf(fupl_options[i].toLowerCase) !== -1) {\n          fupl_options[i] = JSON.parse(fupl_options[i]);\n        }\n      }\n\n\n      new upl.createUploader(fupl_options);\n\n     }); // end document.querySelectorAll(fupl_selector).forEach\n  }; // end upl.init\n\n  return upl;\n\n})(FileUploader2 || {});\n\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  upl.createUploader = (fupl_options) => {\n\n    // eventuale campo input e relativo tag label\n    let _input = fupl_options.element.querySelector('input[type=\"file\"]'),\n      original_label = fupl_options.element.querySelector('label');\n\n\n    // implementazione eventuali parametro/attributo `accept`\n    if( fupl_options.filetype === 'auto' ) {\n\n      let accept_attr = [],\n      accept_params = [];\n\n      if( fupl_options.accept !== null ) {\n        accept_params = fupl_options.accept\n          .split(',').map( item => item.trim() );\n      }\n\n      if(_input && _input.getAttribute('accept') ) {\n        accept_attr = _input.getAttribute('accept')\n          .split(',').map( item => item.trim() );\n      }\n\n      // https://www.peterbe.com/plog/merge-two-arrays-without-duplicates-in-javascript\n      fupl_options.accept = [...new Set([...accept_params, ...accept_attr])];\n\n    } else {\n      fupl_options.accept = upl.mimetypes[fupl_options.filetype];\n    }\n\n    // elaborazione max_filesize\n    let max_filesize = upl.parse_max_filesize(fupl_options.max_filesize, fupl_options.locales);\n    if( max_filesize === false ) {\n      throw new Error( '\"' + fupl_options.max_filesize + '\" non è un valore corretto per `max_filesize`');\n    } else {\n      fupl_options.max_filesize = max_filesize;\n    }\n\n    // parametro o attributo multiple\n    fupl_options.multiple = Boolean(fupl_options.multiple ||\n      (_input && _input.hasAttribute('multiple') ));\n\n    // parametro o attributo required\n    fupl_options.required = Boolean(fupl_options.required ||\n      (_input && _input.hasAttribute('required') ));\n\n\n    // tipologia generale dell'uploader (img o doc) e modalità\n    // selezione file\n    fupl_options._type = fupl_options.filetype === 'img'? 'img' : 'doc';\n    fupl_options._mode = fupl_options.multiple? 'multiple' : 'single';\n\n    // testo label (da tag o parametro uploader_label_text)\n    if( !fupl_options.uploader_label_text && original_label) {\n      fupl_options.uploader_label_text = original_label.innerHTML;\n    }\n    // caso in cui sia presente nessun valore\n    if ( !fupl_options.uploader_label_text ) {\n      fupl_options.uploader_label_text = '__label non presente__';\n    }\n\n    // aggiunta della classe principale\n    fupl_options.element.classList.add(\"fupl\");\n\n    // aggiunta wrapper\n    fupl_options.wrapper = document.createElement('div');\n    fupl_options.element.parentNode.insertBefore(fupl_options.wrapper, fupl_options.element);\n    fupl_options.wrapper.appendChild(fupl_options.element);\n    fupl_options.wrapper.classList.add(\"fupl-wrapper\");\n    fupl_options.wrapper.classList.add(\"fupl-type-\" + fupl_options._type );\n    if(fupl_options.multiple) {\n      fupl_options.wrapper.classList.add(\"fupl-multiple\");\n    }\n    // aggiunta eventuali class' personale\n    if( fupl_options.element_class ) {\n      fupl_options.element.classList.add( ...fupl_options.element_class.split(' ') );\n    }\n\n    // aggiunta label uploader\n    if( fupl_options.uploader_add_label ) {\n      let _class = ['fupl-label'];\n      if( fupl_options.uploader_label_class ) {\n        _class.push(fupl_options.uploader_label_class);\n      }\n      if( fupl_options.required ) {\n        _class.push('required');\n      }\n      fupl_options.element.insertAdjacentHTML('beforebegin',\n        '<div class=\"fupl-label\">' +\n          '<label' + (_class.length? ' class=\"' + _class.join(' ') + '\"' : '') + '>' +\n            fupl_options.uploader_label_text +\n          '</label>' +\n        '</div>'\n      );\n      fupl_options.wrapper.classList.add( 'fupl-has-label' );\n    }\n\n    // aggiunta template uploader\n    fupl_options.element.innerHTML = fupl_options.templates.main;\n\n    fupl_options.istance_input = fupl_options.element.querySelector('.fupl-panel input[type=\"file\"]');\n    fupl_options.istance_label = fupl_options.element.querySelector('.fupl-panel label');\n    fupl_options.istance_dd_text = fupl_options.element.querySelector('.fupl-panel .fupl-dd-text');\n    fupl_options.istance_info_text = fupl_options.element.querySelector('.fupl-panel .fupl-info-text');\n    fupl_options.istance_result_wrapper = fupl_options.element.querySelector('.fupl-result');\n\n\n    // inserimento testi e attributi\n    // if( fupl_options.required ) {\n    //   fupl_options.istance_input.setAttribute('required', '');\n    // }\n    if( fupl_options.multiple ) {\n      fupl_options.istance_input.setAttribute('multiple', '');\n    }\n    if( fupl_options.accept !== null ) {\n      fupl_options.istance_input.setAttribute('accept', fupl_options.accept.join(','));\n    }\n\n    // aggiunta attributo data al wrapper per segnalare il required\n    if( fupl_options.required ) {\n      fupl_options.wrapper.dataset[upl.data_attributes.required] = 'true';\n    }\n\n    fupl_options.istance_label.insertAdjacentHTML('beforeend',\n      fupl_options.input_text[fupl_options._type][fupl_options._mode][0]\n    );\n    if(fupl_options.input_label_class) {\n      fupl_options.istance_label.classList.add(...fupl_options.input_label_class.split(' '));\n    }\n    fupl_options.istance_dd_text.innerHTML = fupl_options.input_text[fupl_options._type][fupl_options._mode][1];\n\n    // info text\n    fupl_options.istance_info_text.innerHTML = 'xxx';\n    if( fupl_options.show_info_text ) {\n      if(fupl_options.custom_info_text) {\n        fupl_options.istance_info_text.innerHTML = fupl_options.custom_info_text;\n      } else {\n        fupl_options.istance_info_text.innerHTML = upl.create_info_text(fupl_options);\n      }\n    }\n\n    // aggiunta valori\n    if( !fupl_options.values || !fupl_options.values.length ) {\n      fupl_options.istance_result_wrapper.innerHTML = fupl_options.templates.no_file[fupl_options._type];\n      fupl_options.wrapper.dataset[upl.data_attributes.hasValues] = 'false';\n\n    } else {\n      fupl_options.values.forEach( item => {\n        upl.createItem(item, fupl_options);\n      });\n\n      // aggiunta attributo data per segnalare che sono presenti valori\n      fupl_options.wrapper.dataset[upl.data_attributes.hasValues] = 'true';\n    }\n\n    // gestione aggiunta nuovi elementi\n    upl.addNewItemHandlers(fupl_options);\n\n\n    // esecuzione init_callback, se presente\n    if( fupl_options.init_callback !== null ) {\n      fupl_options.init_callback( fupl_options );\n    }\n\n\n    //debug\n    if( fupl_options.debug ) {\n      /* eslint-disable */\n      console.groupCollapsed('FileUploader options');\n      // creazione di un oggetto bidimensinale per\n      // semplificare la rappresentazione in tabella\n      let c_options = {},\n      c_keys = Object.keys(fupl_options);\n      c_keys.sort();\n      c_keys.forEach(item => {\n        let _toStringify = typeof fupl_options[item] === 'object' &&\n        fupl_options[item] !== null &&\n          item !== 'element';\n        c_options[item] = _toStringify ? JSON.stringify(fupl_options[item], null, ' ') : fupl_options[item];\n      });\n      console.table(c_options);\n      console.groupCollapsed('fupl_options');\n        console.log(fupl_options);\n      console.groupEnd();\n      console.groupEnd();\n      /* eslint-enable */\n    } // end if debug\n\n\n  }; // end upl.createUploader\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  upl.createItem = (item_data, fupl_options) => {\n\n    try {\n\n      // verifica se il template è una stringa o no\n      // nel primo caso viene trasformato in oggetto DOM e vengono effettuate\n      // le operazioni comuni a tutti gli elementi\n      // il risultato viene quindi riassegnato all'oggetto `fupl_options`\n      // per poter essere riutilizzato\n      // i template per lementi multipli possono null,\n      // in questo caso si utilizza quello per gli elmenti singoli\n      let item = fupl_options.templates[fupl_options._type][fupl_options._mode];\n      if( item === null && fupl_options._mode === 'multiple' ) {\n        item = fupl_options.templates[fupl_options._type]['single'];\n      }\n\n      if( typeof item === 'string') {\n        let div = document.createElement('div'); // wrapper da rimuovere al momento dell'inserimento\n        div.innerHTML = item.trim();\n        // aggiunta pulsante rimozione\n        div.querySelector('.fupl-remove').innerHTML = fupl_options.templates.remove_btn;\n        item = div;\n        fupl_options.templates[fupl_options._type][fupl_options._mode] = div;\n      }\n\n      /*\n        aggiunta dati specifici dell'elemento:\n\n        elementi interni a .fupl-item:\n          .fupl-file-name\n          .fupl-file-size\n          .fupl-img →  img\n          .fupl-img → a.href\n          .fupl-doc →  a.href\n\n        struttura item_data:\n          [\n            {\n              id    → identificativo univoco del file (può essere anche il percorso sul server)\n              name  → nome del file\n              url   → url per eventuale tag <a> presente nell'elemento (se immagine può essere assente o null)\n              src   → attributo `src` (se immagine) oppure assente o null\n              wi    → larghezza in px (se immagine) oppure assente o null\n              he    → altezza in px (se immagine) oppure assente o null\n              size  → dimensione in bytes\n              [...] → eventuali campi aggiuntivi specifici dell'istanza\n            }\n            [...]\n          ]\n      */\n\n      // nome file\n      let fupl_file_name = item.querySelector('.fupl-file-name');\n      if(fupl_file_name && item_data.name ) {\n        fupl_file_name.innerHTML = item_data.name;\n      }\n\n      // info dimensioni\n      let fupl_file_size = item.querySelector('.fupl-file-size');\n      if(fupl_file_size ) {\n        let size_string = '';\n        if(fupl_options._type === 'img' && item_data.wi && item_data.he) {\n          size_string = item_data.wi + '&times;' + item_data.he + '<span class=\"fupl-unit\">px</span>';\n          if(item_data.size) {\n            size_string += ' &ndash; ';\n          }\n        }\n        if(item_data.size) {\n          size_string += upl.parse_filesize(item_data.size, fupl_options.locales);\n        }\n\n        fupl_file_size.innerHTML = size_string;\n      }\n\n\n      // immagine\n      if( fupl_options._type === 'img' ) {\n        item.querySelector('.fupl-img').src = item_data.src;\n      }\n\n      // url\n      let fupl_url = item.querySelector('.fupl-url');\n      if( fupl_url && item_data.url) {\n        fupl_url.href = item_data.url;\n      }\n\n      // id elemento per eventuale cancellazione\n      if(item_data.id) {\n        item.querySelector('.fupl-item').dataset[upl.data_attributes.item_id] = item_data.id;\n      }\n\n      fupl_options.istance_result_wrapper.insertAdjacentHTML('beforeend',\n        item.innerHTML\n      );\n\n      // aggiunta evento trigger eliminazione elemento\n      item = fupl_options.istance_result_wrapper.querySelector('.fupl-item:last-child');\n      item.querySelector('.fupl-remove-trigger').addEventListener('click', () => {\n        // se l'id non è impostato si tratta di un nuovo elemento,\n        // e non va eseguita la cancellazione sul server\n        let id = item.dataset[upl.data_attributes.item_id];\n        item.remove();\n        if(id) {\n          fupl_options.wrapper.insertAdjacentHTML('beforeend',\n            `<input type=\"hidden\" name=\"${fupl_options.delete_varname}\" value=\"${id}\">`\n          );\n        }\n\n        // controllo se istance_result_wrapper è vuoto\n        // in caso positivo aggiunta testo `no_file` ed impostazione su false\n        // di fupl_options.wrapper.dataset[upl.data_attributes.hasValues]\n        if( !fupl_options.istance_result_wrapper.querySelectorAll('.fupl-item').length ) {\n          fupl_options.istance_result_wrapper.innerHTML = fupl_options.templates.no_file[fupl_options._type];\n          fupl_options.wrapper.dataset[upl.data_attributes.hasValues] = 'false';\n        }\n\n      });\n\n    } catch(e) {\n      console.error(e); // eslint-disable-line\n    }\n\n  }; // end upl.createItem\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  // https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n  upl.addNewItemHandlers = (fupl_options) => {\n\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }, false);\n    });\n\n    ['dragover', 'dragenter'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, () => {\n        fupl_options.element.classList.add( fupl_options.element_dragover_class );\n      }, false);\n    });\n\n    ['dragleave', 'dragend'].forEach(eventName => {\n      fupl_options.element.addEventListener(eventName, () => {\n        fupl_options.element.classList.remove( fupl_options.element_dragover_class );\n      }, false);\n    });\n\n    fupl_options.element.addEventListener('drop', (e) => {\n      fupl_options.element.classList.remove( fupl_options.element_dragover_class );\n\n      let files = e.dataTransfer.files;\n\n      if( !fupl_options.multiple && files.length > 1 ) {\n        fupl_options.alert_api(fupl_options.alert_messages.tooMuchFiles, fupl_options);\n      } else {\n        upl.sendFiles( files, fupl_options );\n      }\n    }, false);\n\n    // selezione tramite input\n    fupl_options.istance_input.addEventListener('change', () => {\n      upl.sendFiles( fupl_options.istance_input.files, fupl_options );\n    });\n\n  }; // end upl.createItem\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  /*\n\tsendFiles\n\tEsegue i controlli impostati, quindi la chiamata ajax e produce\n\til feedback per l'utente\n\t*/\n  upl.sendFiles = (filelist, fupl_options) => {\n\n    // sendAjaxRequest\n    // esegue l'upload Ajax - versione compatibile per IE\n    // https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n\n// TODO utilizzo `fetch` (però non compatibile IE)\n// https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\n\n    const sendAjaxRequest = ( current_item, callback ) => {\n      const ajax = new XMLHttpRequest(),\n      show_error = (error_message) => {\n        fupl_options.alert_api( error_message, fupl_options );\n        /* eslint-disable */\n        if(fupl_options.debug) {\n          console.error( ajax.status, ajax.statusText );\n          console.error( ajax.responseText );\n        }\n        /* eslint-enable */\n      };\n\n      ajax.open( 'POST', fupl_options.uploader_url, true );\n\n      ajax.onload = function() {\n\n        if( ajax.status >= 200 && ajax.status < 400 ) {\n\n          let response = JSON.parse( ajax.responseText ),\n          hidden_fields = upl.buildHiddenFields(current_item, fupl_options, response.tmp_file);\n\n          fupl_options.upload_complete_callback({\n            'item'          : current_item,\n            'server_error'  : response.error,\n            'hidden_fields' : hidden_fields,\n            'fupl_options'  : fupl_options\n          });\n\n        } else {\n          show_error(fupl_options.alert_messages.xhrError);\n        }\n        if( callback && typeof callback === \"function\") {\n          callback();\n        }\n      };\n\n      ajax.onerror = function() {\n        show_error(fupl_options.alert_messages.xhrError);\n\n        if( callback && typeof callback === \"function\") {\n          callback();\n        }\n      };\n\n      let fileData = new FormData();\n      fileData.append('file', current_item.file);\n      ajax.send( fileData );\n    },\n\n\n    disable_submit = (modo) => {\n      // modo === true → disable, false → enable\n      const _form = fupl_options.element.closest('form');\n      if(fupl_options.disable_submit && _form) {\n        const submit_btns = _form.querySelectorAll('[type=\"submit\"');\n        submit_btns.forEach( btn => {\n          btn.disabled = modo;\n        });\n\n        const submitHandler = (e) => {\n          e.preventDefault();\n          console.log('submit'); // eslint-disable-line\n          return false;\n        };\n        if(modo === true) {\n          _form.addEventListener('submit', submitHandler, false);\n        } else {\n          _form.removeEventListener('submit', submitHandler, false);\n        }\n\n      }\n    };\n\n    // disabilitazione form\n    disable_submit(true);\n\n    if( filelist.length ) {\n\n\n    // https://stackoverflow.com/questions/38362231/how-to-use-promise-in-foreach-loop-of-array-to-populate-an-object\n    [...filelist].forEach(function (item, idx) {\n      try {\n\n        let current_item = {file: item};\n\n        // generazione id unico\n        current_item.id = 'fupl_item_' + (+new Date()) + '_' + idx;\n\n        //BUG i valori da attributo accept inseriti come estensioni non vengono accettati\n        // controllo filetype (per drag&drop e browser che non supportano accept)\n        if( fupl_options.accept.length ) {\n          let ext = item.name.split('.').pop().toLowerCase();\n          if( fupl_options.accept.indexOf( item.type ) === -1 && fupl_options.accept.indexOf( ext ) === -1) {\n\n            throw fupl_options.alert_messages.fileFormatError\n              .replace(/{{file_name}}/, item.name );\n          }\n        } // end controllo filetype\n\n        // controllo maxfilesize\n        if( fupl_options.max_filesize !== null ) {\n          if( item.size > fupl_options.max_filesize.maxbytes ) {\n            let item_parsed_size = upl.parse_filesize(item.size, fupl_options.locales);\n\n            throw fupl_options.alert_messages.fileSizeError\n              .replace(/{{file_name}}/, item.name )\n              .replace(/{{file_size}}/, item_parsed_size )\n              .replace(/{{allowed_size}}/, fupl_options.max_filesize.feedback_size );\n\n          }\n        } // end controllo maxfilesize\n\n      } catch (errormessage) {\n        console.log(errormessage); // eslint-disable-line\n        fupl_options.alert_api( errormessage, fupl_options );\n      }\n\n\n\n//           if(!is_error ) {\n\n//           \tnew Promise(function(resolve, reject) {\n//             \tif(upl_options.filetype === 'img') {\n\n//               \tvar reader  = new FileReader();\n//                 reader.addEventListener(\"load\", function () {\n\n//                   var image = new Image();\n//                   image.src = reader.result;\n//                   image.addEventListener(\"load\", function () {\n\n//                     var err_mes = [];\n\n//     \t\t\t\t\t\t\t\tif( upl_options.img_w && image.width !== upl_options.img_w ) {\n//     \t\t\t\t\t\t\t\t\terr_mes.push(\"larghezza non corrispondente (\" + image.width + 'px invece di ' + upl_options.img_w + 'px)');\n\n//     \t\t\t\t\t\t\t\t} else if(upl_options.img_min_w && image.width < upl_options.img_min_w) {\n//     \t\t\t\t\t\t\t\t\terr_mes.push('larghezza inferiore a quella minima consentita (' + image.width + 'px invece di ' +  upl_options.img_min_w + 'px)');\n\n//     \t\t\t\t\t\t\t\t} else if(upl_options.img_max_w && image.width > upl_options.img_max_w) {\n//     \t\t\t\t\t\t\t\t\terr_mes.push('larghezza superiore a quella massima consentita (' + image.width + 'px invece di ' +  upl_options.img_max_w + 'px)');\n//     \t\t\t\t\t\t\t\t}\n\n//     \t\t\t\t\t\t\t\tif (upl_options.img_h && image.height !== upl_options.img_h) {\n//     \t\t\t\t\t\t\t\t\terr_mes.push('altezza non corrispondente (' + image.height + 'px invece di ' + upl_options.img_h + 'px)');\n\n//     \t\t\t\t\t\t\t\t} else if(upl_options.img_min_h && image.height < upl_options.img_min_h) {\n//     \t\t\t\t\t\t\t\t\terr_mes.push('altezza inferiore a quella minima consentita (' + image.height + 'px invece di ' + upl_options.img_min_h + 'px)');\n\n//     \t\t\t\t\t\t\t\t} else if(upl_options.img_max_h && image.height > upl_options.img_max_h) {\n//     \t\t\t\t\t\t\t\t\terr_mes.push('altezza superiore a quella massima consentita (' + image.height + 'px invece di ' + upl_options.img_max_h + 'px)');\n//     \t\t\t\t\t\t\t\t}\n\n//     \t\t\t\t\t\t\t\tif( err_mes.length ) {\n//                       reject(err_mes);\n//     \t\t\t\t\t\t\t\t} else {\n\n//                       sendAjaxRequest( upl_options, item,  item_id, image.width, image.height,\n//                         resolve ( [reader.result, image.width, image.height] )\n//                       );\n//     \t\t\t\t\t\t\t\t}\n\n//                   }, false); // end image.addEventListener(\"load\"\n\n//                 }, false); // end reader.addEventListener(\"load\"\n\n//                 reader.readAsDataURL( item );\n\n//             \t} else { // non immagine\n\n//                 sendAjaxRequest( upl_options, item,  item_id,\n//                   resolve (null)\n//                 );\n//               }\n//             }) // end Promise\n//             .then(\n//               // resolve\n//               function ( img_data ) {\n\n//                 parsedFilesCount++;\n//                 upl_options.upload_start_callback({\n//                   'item_id'           : item_id,\n//                   'filelist_item'     : item,\n//                   'img_preview'       : img_data? img_data[0] : null,\n//                   'uploader_options'  : upl_options,\n//                   'img_wi'            : img_data? img_data[1] : null,\n//                   'img_he'            : img_data? img_data[2] : null\n//                 });\n//               },\n//               //reject\n//               function ( mes_array ) {\n//                 send_error('Dimensioni immagine “' + item.name + '”non corrette:\\n' + mes_array.join('\\n') );\n//               }\n//             )\n//             .finally( function () {\n//               // se necessario riattiva il pulsante submit\n//               if(submit_btn && !submit_btn_prev_disabled) {\n//                 submit_btn.prop('disabled', false);\n//               }\n//             });\n//           } // end if(!is_error )\n       }); // end foreach\n\n    } // end if( filelist.length )\n\n  }; // end upl.sendFiles\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  upl.buildHiddenFields = () => {\n    console.log('buildHiddenFields'); // eslint-disable-line\n  }; // end upl.sendFiles\n\n  return upl;\n\n})(FileUploader2 || {});\n\n\n\n// FileUploader = (function (_upl) {\n//   \"use strict\";\n\n//   /**\n// \t * ### normalize\\_file\\_name\n// \t * (funzione privata) elimina i caratteri ascii > 127\n// \t *\n//    * - Restituisce la stringa normalizzata\n// \t */\n// \tvar normalize_file_name = function (filename) {\n//       var converted = \"\",\n//         conversionTable = { // Reference table Unicode vs ASCII\n//           'à' : 'a', // 224\n//           'è' : 'e', // 232\n//           'é' : 'e', // 233\n//           'ì' : 'i', // 236\n//           'ò' : 'o', // 242\n//           'ù' : 'u', // 249\n//           'À' : 'A', // 192\n//           'È' : 'E', // 200\n//           'É' : 'E', // 201\n//           'Ì' : 'I', // 204\n//           'Ò' : 'O', // 210\n//           'Ù' : 'U', // 217\n//           \"'\" : '_', // 39\n//           '|' : '_', // 124\n//           '!' : '_', // 33\n//           '\"' : '_', // 34\n//           '$' : '_', // 36\n//           '%' : '_', // 37\n//           '&' : '_', // 38\n//           '/' : '_', // 47\n//           '(' : '_', // 40\n//           ')' : '_', // 41\n//           '=' : '_', // 61\n//           '?' : '_', // 63\n//           '^' : '_', // 94\n//           '*' : '_', // 42\n//           '[' : '_', // 91\n//           ']' : '_', // 93\n//           'ç' : 'c', // 231\n//           '@' : '_', // 64\n//           '#' : '_', // 35\n//           '<' : '_', // 60\n//           '>' : '_', // 62\n//           'ü' : 'u', // 252\n//           'Ü' : 'U', // 220\n//           'ñ' : 'n', // 241\n//           'Ñ' : 'N', // 209\n//           '~' : '_', // 126\n//           ':' : '_',\n//           '\\\\' : '_'\n//         }\n//       ;\n\n//       for(var i = 0; i < filename.length; i++) {\n//         if( filename[i] in conversionTable) {\n//           converted += conversionTable[filename[i]];\n\n//         } else if(filename.charCodeAt(i) === 768 || filename.charCodeAt(i) === 769 ) { // accento grave e accento acuto\n//           converted += '';\n\n//         } else if(filename.charCodeAt(i) > 127 ) {\n//           converted += '_';\n\n//         } else {\n//           converted += filename.charAt(i);\n//         }\n//       }\n\n//   \treturn converted.replace(/ /g, '_').replace(/_+/g, '_');\n\n//   };\n\n\n//   /**\n// \t * ### build\\_hidden\\_fields\n// \t * (funzione) genera i campi hidden con i valori da restituire al server.\n// \t *\n//    * - Restituisce la stringa dei campi hidden con i vari parametri\n// \t */\n// \t_upl.build_hidden_fields = function (item_id, upl_options, filelist_item, tmp_file, image_width, image_height) {\n\n// /*\n//     ELIMINATO, usato item_id al suo posto\n\n//     files_count = conteggio dei blocchi di campi hidden, utilizzato\n//     per determinare l'indice corrente\n//     var files_count =  $('.file_uploader_hiddens').length,\n// */\n\n//     var hidden_fields = '',\n//       _values = {\n//         'tmp_file'  : tmp_file,\n//         'file_name' : normalize_file_name(filelist_item.name),\n//         'size'      : filelist_item.size,\n//         'type'      : filelist_item.type\n//       };\n\n//     if(image_width && image_height) {\n//       _values.width = image_width;\n//       _values.height = image_height;\n//     }\n\n//     for (var _key in _values) {\n//       hidden_fields += '<input type=\"hidden\" '+\n//         'name=\"' + upl_options.varname + '[' + item_id +'][' + _key + ']\" '+\n//         'value=\"' + _values[_key] +'\">';\n//     }\n\n//     return '<div class=\"file_uploader_hiddens\">' + hidden_fields + '</div>';\n\n// \t};\n\n//   return _upl;\n\n// })(FileUploader || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n  \"use strict\";\n\n\n  /**\n\t * create_info_text\n\t * (funzione) Genera la stringa riepilogativa delle limitazioni da rispettare\n\t * per la selezione dei file\n\t *\n   * - Restituisce la stringa informativa\n\t */\n\tupl.create_info_text = fupl_options => {\n    let info_text = [];\n\n    if( fupl_options.filetype === 'img' ) {\n      info_text.push( 'immagini in formato <strong>JPEG</strong>, <strong>PNG</strong>, <strong>GIF</strong> o <strong>WEBP</strong>' );\n\n      if( fupl_options.img_w && fupl_options.img_h ) {\n        info_text.push( 'dimensioni: <strong>' +  fupl_options.img_w + '&times;' + fupl_options.img_h + 'px</strong>');\n\n      } else {\n\n        if(fupl_options.img_w && fupl_options.img_h && fupl_options.img_w === fupl_options.img_h) {\n          info_text.push( 'larghezza e altezza <strong>' +  fupl_options.img_h + 'px</strong>');\n\n        } else if(fupl_options.img_min_w && fupl_options.img_min_h && fupl_options.img_min_w === fupl_options.img_min_h) {\n          info_text.push( 'larghezza e altezza non inferiori a <strong>' +  fupl_options.img_min_w + 'px</strong>');\n\n        } else if(fupl_options.img_max_w && fupl_options.img_max_h && fupl_options.img_max_w === fupl_options.img_max_h) {\n          info_text.push( 'larghezza e altezza non superiori a <strong>' +  fupl_options.img_max_w + 'px</strong>');\n\n        } else {\n\n          if( fupl_options.img_w ) {\n            info_text.push( 'larghezza <strong>' +  fupl_options.img_w + 'px</strong>');\n\n          } else if( fupl_options.img_min_w && fupl_options.img_max_w ) {\n            info_text.push( 'larghezza compresa tra <strong>' +  fupl_options.img_min_w + 'px</strong> e <strong>' + fupl_options.img_max_w + 'px</strong>');\n\n          } else if( fupl_options.img_min_w ) {\n            info_text.push( 'larghezza non inferiore a <strong>' +  fupl_options.img_min_w + 'px</strong>');\n\n          } else if( fupl_options.img_max_w  ) {\n            info_text.push( 'larghezza non superiore a <strong>' +  fupl_options.img_max_w + 'px</strong>');\n          }\n\n          if( fupl_options.img_h ) {\n            info_text.push( 'altezza <strong>' +  fupl_options.img_h + 'px</strong>');\n\n          } else if( fupl_options.img_min_h && fupl_options.img_max_h ) {\n            info_text.push( 'altezza compresa tra <strong>' +  fupl_options.img_min_h + 'px</strong> e <strong>' + fupl_options.img_max_h + 'px</strong>');\n\n          } else if( fupl_options.img_min_h ) {\n            info_text.push( 'altezza non inferiore a <strong>' +  fupl_options.img_min_h + 'px</strong>');\n\n          } else if( fupl_options.img_max_h  ) {\n            info_text.push( 'altezza non superiore a <strong>' +  fupl_options.img_max_h + 'px</strong>');\n          }\n        }\n      }\n\n    } else if( fupl_options.filetype === 'pdf' ) {\n      info_text.push( 'file in formato <strong>PDF</strong>' );\n    }\n\n    if( fupl_options.max_filesize !== null ) {\n      info_text.push( 'max <strong>' + fupl_options.max_filesize.feedback_size + '</strong>' );\n    }\n\n    let str = info_text.join(fupl_options.info_text_join_string);\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n\n    if(fupl_options.info_text_wrap_string && str) {\n      str = fupl_options.info_text_wrap_string[0] + str + fupl_options.info_text_wrap_string[1];\n    }\n    return str;\n\t};\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ( (upl) => {\n\n  // parametri di default condivisi da tutte le istanze\n  const default_options = {\n\n    // percorso del css FileUploader\n    css: null,\n\n    // Attiva la modalit&agrave; debug che mostra in console le informazioni\n    // sulla configurazione corrente\n    debug: false,\n\n    // locales string, usata per la formattazione della stringa numerica\n    // mostrata all'utente ricavata da `max_filesize`\n    locales: 'it-IT',\n\n    // messaggio browser non compatibile\n    unsuitableBrowserMessage: 'Il tuo browser non ha tutte le funzionalit&agrave; richieste da FileUploader',\n\n    // Interfaccia per l'invio di messaggi di errore\n    // mes  →  chiave dell'oggetto `alert_messages` con il testo del messaggio di errore\n    // type →  uno tra info, error, warning\n    // opts →  l'oggetto file uploader options corrente\n    alert_api: (mes, opts, type = error) => { window.alert(opts.alert_messages.mes);}, // eslint-disable-line\n\n    // testo dei messaggi errore\n    // eventyali segnaposti sono sotituiti nell'applicazione\n    alert_messages: {\n      tooMuchFiles: 'Puoi selezionare un solo file!', // tentativo di trascinare più file con uploader singolo\n      xhrError: 'Si &egrave; verificato un errore nell&rsquo;invio dei dati.', // errore ajax\n      fileFormatError: 'Il file &ldquo;<strong>{{file_name}}</strong>&rdquo; &egrave; di un formato non consentito',\n      fileSizeError: 'Le dimensioni di &ldquo;<strong>{{file_name}}</strong>&rdquo; ({{file_size}}) '+\n        'superano il valore massimo consentito ({{allowed_size}})'\n    },\n\n    // Url dello script lato server che esegue il caricamento del file\n    // per l'istanza in esame. Ha la precedenza sull'impostazione globale\n    // obbligatorio\n    uploader_url: null,\n\n    // Tipologia dei file selezionabili\n    // il valore deve corrispondere ad una delle chievi dell'array `mimetypes`\n    filetype: 'auto',\n\n    /*\n    Stringa di estensioni o mimetypes separati da virgola accettabili per l'uploader\n    corrente in aggiunta o sostituzione di quanto impostato tramite il parametro `filetype`.\n\n    L'eventuale attributo `accept` del campo input contenuto\n    nel contenitore uploader (se presente), svolge la stessa funzione.\n\n    In entrambi i casi, i valori sono presi in considerazione solo se `filetype == 'auto'`\n\n    In presenza sia del parametro che dell'attributo `accept`, viene effettuato un merge,\n    e l'attributo ha la precedenza sul parametro.\n    Se il parametro &egrave; `null` e l'attributo `accept` non &egrave; presente,\n    con `filetype == auto` vengono accettati tutti i tipi di file.\n    */\n    accept: null,\n\n    /*\n    Parametro multiple.\n    Attiva la possibilit&agrave; di acquisire pi&ugrave; file con lo stesso uploader.\n    L'attivazione di questa opzione pu&ograve; essere effettuata anche tramite il parametro\n    del campo `input` /se presente)\n    */\n    multiple: false,\n\n    /*\n    Parametro required.\n    Eventuale impostazione del campo come obbligatorio.\n    L'attivazione di questa opzione pu&ograve; essere effettuata anche tramite il parametro\n    del campo `input` /se presente)\n    */\n    required: false,\n\n    /*\n    Disabilita (se presente) il form in cui &egrave; incluso l'uploader (disabilita anche iul pulsante submit)\n    da usare solo se nel form non sono presenti altri interazioni che potrebbero\n    entrare in collisione con questa opzione\n    */\n    disable_submit: false,\n\n    /*\n      Template dei markup utilizzati\n      - `main`         : markup principale inserito dentro l'elemento indicato da\n                         `upl.global_options.selector`. L'elemento, a cui viene inoltre\n                         aggiunta la classe `flup`, viene inoltre racchiuso in un elemento\n                         `div.flup-wrapper`\n\n      - `single_img`   : template aggiuntivo per immagini singole\n      - `multiple_imgs`: template aggiuntivo per immagini multiple\n      - `single_doc`   : template aggiuntivo per documenti singoli\n      - `multiple_docs`: template aggiuntivo per documenti multipli\n      - `no_file`      : template per indicare l'assenza di file\n\n      Consulta il readme per ulteriori dettagli.\n\n      Il markup di default utilizza classi di Boostrap 4.\n\n      L'eventuale contenuto dell'elemento originale viene eliminato (pu&ograve; contenere\n      un elemento type[file] per eventuale procedura di fallback)\n\n      I template possono essere alterati a piacimento, purch&eacute; si mantengano le classi\n      `fupl-*` utilizzate nella procedura.\n\n      I template delle immagini, devono contenere il tag img\n\n      doc e img multipli possono essere null, in questo caso vengono utilizzati\n      gli stessi markup per singolo file\n    */\n    templates: {\n      // wrapped in <div class=\"fupl-wrapper\"><div class=\"fupl\"></div></div>\n      main: '<div class=\"fupl-result\"></div>' +\n        '<div class=\"fupl-panel\">' +\n          '<div class=\"fupl-button\">' +\n            '<label><input type=\"file\"></label>' +\n            '<div class=\"fupl-dd-text\">{</div>' +\n          '</div>' +\n          '<div class=\"fupl-info-text\"></div>' +\n        '</div>',\n\n      // contenuto di fupl-result quando non sono presenti files\n      no_file: {\n        img: '<div class=\"fupl-result-empty text-muted small font-italic\">Nessuna immagine presente</div>',\n        doc: '<div class=\"fupl-result-empty text-muted small font-italic\">Nessun file presente</div>'\n      },\n\n      // trigger per la rimozione di un elemento da .fupl_results\n      // &egrave; aggiunto all'interno dell'elemento `.fupl-remove`, presente in ognuno\n      // degli elementi successivi\n      // Deve essere un elemento button\n      remove_btn: '<button type=\"button\" class=\"close fupl-remove-trigger\" aria-label=\"Elimina\" title=\"Elimina questo file\">' +\n            '<span aria-hidden=\"true\">&times;</span>' +\n          '</button>',\n\n      img: {\n        single: '<div class=\"fupl-item\">' +\n          '<div class=\"fupl-remove\"></div>' +\n          '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\">' +\n          '<div class=\"fupl-file-info\">' +\n            '<div class=\"text-truncate fupl-file-name\"></div>' +\n            '<div class=\"fupl-file-size\"></div>' +\n          '</div>' +\n        '</div>',\n\n        multiple: '<div class=\"fupl-item\">' +\n            '<div class=\"fupl-remove\"></div>' +\n            '<div class=\"fupl-img-wrapper\">' +\n              '<img alt=\"Immagine caricata\" class=\"img-fluid fupl-img\">' +\n            '</div>' +\n            '<div class=\"fupl-file-info\">' +\n              '<div class=\"text-truncate fupl-file-name\"></div>' +\n              '<div class=\"fupl-file-size\"></div>' +\n            '</div>' +\n          '</div>'\n      },\n\n      doc : {\n        single: '<div class=\"fupl-item\">' +\n            '<div class=\"fupl-remove\"></div>' +\n            '<div class=\"fupl-doc text-truncate\">' +\n              '<a href=\"#\" class=\"text-truncate fupl-file-name fupl-url\"></a>' +\n            '</div>' +\n            '<span class=\"small ml-1 text-nowrap fupl-file-size\"></span>' +\n          '</div>',\n\n        multiple: null // usa single_doc\n      }\n    },\n\n    // Eventuale classe da aggiungere all'elemento FileUploader al\n    // momento dell'inizializzazione\n    element_class: null,\n\n    // Classe da aggiungere all'elemento FileUploader quando un file\n    // vi &egrave; trascinato sopra\n    element_dragover_class: 'fupl-is-dragover',\n\n    // Label da applicare da applicare all'elemento FileUploader.\n    // Se `null` e se esiste un elemento `label` all'interno dell'uploader,\n    // viene preso il testo dell'elemento\n    uploader_label_text: null,\n\n    // Opzione per l'aggiunta di un tag label prima dell'elemento uploader\n    uploader_add_label: true,\n\n    // Eventuale classe da aggiungere ad uploader_label\n    uploader_label_class: null,\n\n    /*\n    Array (o stringa json) dei testi del label del tag input (il primo elemento dell'array) e del testo\n    informativo per il drag &drop da inserire in `.fupl-dd-text` (il secondo elemento)\n    nelle varie combinazioni (img singola e multiple, doc singole e multipli)\n    segnaposti: ['{{input_label}}', '{{dd_text}}']\n    */\n    input_text: {\n      img: {\n        single:   [\"Seleziona un'immagine\", \"\\u2026oppure trascinala qui\"],\n        multiple: [\"Seleziona una o pi&ugrave; immagini\", \"\\u2026oppure trascinale qui\"]\n      },\n      doc: {\n        single: [\"Seleziona un documento\", \"\\u2026oppure trascinalo qui\"],\n        multiple: [\"Seleziona uno o pi&ugrave; documenti\", \"\\u2026oppure trascinali qui\"]\n      }\n    },\n\n    // classi da applicare al tag label dell'input[file] generato, utilizzato\n    // come pulsante per la selezione dei file\n    input_label_class: 'btn btn-outline-primary btn-sm',\n\n    // indica se mostrare o no il testo informativo su formati accettati,\n    // dimensioni immagini, ecc. Se si decide di non mostrarlo, potrebbe essere\n    // necessario rimuovere dal template l'elemento `.fupl-info-text`\n    show_info_text: true,\n\n    // stringhe aggiunte all'inizio e alla fine del testo informativo generato\n    // utilizzate solo se `custom_info_text` non &egrave; impostato\n    info_text_wrap_string: ['(', ')'],\n\n    // Stringa utilizzata per concatenare tra loro le varie parti del testo informativo generato\n    // utilizzata solo se `custom_info_text` non &egrave; impostato\n    info_text_join_string: ', ',\n\n    // Eventuale testo informativo personalizzato. se presente,\n    // sostituisce il testo generato in base ai formati, ai limiti di dimensioni, ecc.\n    custom_info_text: null,\n\n    /*\n    impostazioni per le immagini.\n    Applicate solo se filetype == 'img'.\n    Valori numerici che corrispondono alle dimensioni in pixel richieste per l'immagine.\n    I parametri img_min_* e img_max_* possono essere assegnati simultaneamente,\n    ma sono ignorati se esistono i corrispondenti parametri esatti (ad esempio,\n    se &egrave; presente img_w, i parametri img_min_w e img_max_w non vengono presi in considerazione).\n    Il valore di default di tutti i parametri &egrave; null, che significa che non vengono applicati.\n\n      * `img_min_w`: larghezza minima dell'immagine\n      * `img_max_w`: larghezza massima dell'immagine\n      * `img_w`: larghezza esatta dell'immagine\n      * `img_min_h`: altezza minima dell'immagine\n      * `img_max_h`: altezza massima dell'immagine\n      * `img_h`: altezza esatta dell'immagine\n    */\n    img_min_w   : null,\n    img_max_w   : null,\n    img_w       : null,\n    img_min_h   : null,\n    img_max_h   : null,\n    img_h       : null,\n\n    /*\n    Dimensione (peso) massima dell'immagine. Pu&ograve; essere un numero,\n    e in questo caso corrisponde ad una dimensione in KB, o una stringa\n    composta da un valore numerico e da un suffisso tra ‘KB’ e ‘MB’ (anche minuscoli).\n    Se il valore &egrave; null o se la stringa non viene riconosciuta,\n    non &egrave; applicato nessun limite.\n    */\n    max_filesize: null,\n\n    // Prefisso della variabile utilizzata per inviare al server i dati\n    // di ogni singolo file caricato. Il valore indicato &egrave; il nome base dell'array\n    // costruito per inviare i valori al server.\n    varname: 'file',\n\n    // Funzione richiamata dopo l'inizializzazione di ogni elemento FileUploader.\n    // La funzione viene invocata con l'oggetto di tutte le opzioni come argomento\n    init_callback: null,\n\n    /*\n    Funzione richiamata ogni volta che un file viene inviato al server.\n    La funzione viene invocata passandole un oggetto contenente:\n      * `item`: oggetto con i dati dell'elemento in esame:\n        - id: id univoco dell'elemento\n        - file: oggetto filelist\n        -\n      * `filelist_item`: oggetto filelist corrente,\n      * `img_preview` : miniatura dell'immagine in forma di stringa Base64\n        (null se si tratta di altre tipologie)\n      * `fupl_options`: oggetto `options` corrente\n      * `img_wi` e `img_he`: dimensioni in pixel dell'immagine.\n         null se non si tratta di immagini\n    */\n    upload_start_callback: null,\n\n    /*\n    Funzione richiamata ogni volta che un file viene caricato.\n    La funzione viene invocata passandole un oggetto contenente:\n      * `item`: oggetto con i dati dell'elemento in esame:\n          - `id`: id univoco dell'elemento\n          - `file`: oggetto filelist\n          - `img_wi` e img_he: dimensioni in pixel dell'immagine.\n                     null se non si tratta di immagini\n      * `server_error`: null, se l'upload &egrave; stato completato correttamente. oppure\n          stringa con il messaggio di errore restituito\n      * `hidden_fields`: stringa con i campi hidden da inviare al server\n      * `fupl_options`: oggetto `options` corrente\n    */\n    upload_complete_callback: null,\n\n    /*\n    Array json degli eventuali elementi preregistrati, nella forma:\n      [\n        {\n          id    → identificativo univoco del file (pu&ograve; essere anche il percorso sul server) OBBL\n          name  → nome del file\n          url   → url per eventuale tag <a> presente nell'elemento (se immagine pu&ograve; essere assente o null)\n          src   → attributo `src` obbligatorio se immagine, oppure assente o null\n          wi    → larghezza in px se immagine oppure assente o null\n          he    → altezza in px se immagine oppure assente o null\n          size  → dimensione in bytes\n          [...] → eventuali campi aggiuntivi specifici dell'istanza\n        }\n        [...]\n      ]\n\n      l'id viene aggiunto come attributo `data` al pulsante di eliminazione del file\n      (genera un hidden con l'id del file da eliminare dal server)\n    */\n    values: [],\n\n    // varname degli hidden con gli id dei file gi&agrave; registrati  da eliminare\n    delete_varname: 'elimina_file[]',\n\n// TODO\n    // attiva la possibilit&agrave; di riordinare gli elementi trascinandoli\n    // se true, i valori degli eventuali elementi preregistrati devono essere\n    // elencati nel josn `values` nell'ordine correttp\n    reorder: false,\n\n    // name della variabile hidden usata per registrare l'ordinamento\n    reorder_varname: 'order'\n\n// TODO gestione campi aggiuntivi\n  };\n\n  upl.setOptions = (...custom_options) => {\n\n    if( typeof Object.assign === \"function\") {\n      return Object.assign(\n        {},\n        default_options,\n        ...custom_options\n      );\n\n    } else { // IE 11\n      let opts = {};\n      for(let i in default_options) {\n        opts[i] = default_options[i];\n        custom_options.forEach( item => {\n          if(item[i] !== undefined) {\n            opts[i] = item[i];\n          }\n        });\n      }\n      return opts;\n    }\n  };\n\n  return upl;\n\n})(FileUploader2 || {});\n","/* globals FileUploader2:true */\n\nFileUploader2 = ((upl) => {\n\n  // mimetypes ed estensioni accettabili in base al parametro `filetype`.\n  // Il parametro `auto` accetta tutti i tipi di file (salvo eventuali limitazioni\n  // aggiunte tramite parametro e attributo `accept`)\n  upl.mimetypes = {\n    auto : null,\n    img  : ['image/png', 'image/jpeg', 'image/pjpeg', 'image/gif', 'image/webp',\n            '.png', '.jpg', '.jpeg', '.pjpg', '.pjpeg', '.gif', '.webp'],\n    pdf  : ['application/pdf', '.pdf']\n  };\n\n  // nomi degli attributi data utilizzati per controllare alcuni stati o eventi dell'uploader\n  upl.data_attributes = {\n    fupl_selector : 'file_uploader2', // nome dell'attributo data usato come selector (e acui si possonoa ssociare delle opzioni json)\n    required      : 'required', // true se il caricamento del file è obbligatorio\n    hasValues     : 'hasValues', // true se l'uploader congtiene dei file (prergistrati o meno)\n    item_id       : 'id' // id dell'elemento aggiunto all'uploader (se preregistrato)\n  };\n\n  upl.parse_filesize = (bytes, locales) => {\n    bytes = +bytes;\n    let mega = 1024*1024;\n    if(bytes >= mega ) {\n      return (bytes/mega).toLocaleString(locales, {maximumFractionDigits: 1}) + '<span class=\"fupl-unit\">MB</span>';\n    } else {\n      return Math.round(bytes/1024).toLocaleString(locales, {maximumFractionDigits: 0}) + '<span class=\"fupl-unit\">KB</span>';\n    }\n  };\n\n\n  /*\n   parse_max_filesize\n   elabora il parametro `filesize_value` (se esiste) e restituisce:\n    - `null` se `filesize_value` === null`\n    - `false` se `filesize_value` non è un valore corretto\n    - l'oggetto `{ maxbytes: 123456, unit: 'KB', feedback_size: ''}`\n    in cui:\n      - `maxbytes` è il valore in bytes del limite imposto\n      - `unit` è uno tra 'KB' e 'MB'\n      - `feedback_size` è la rappresentazione per un eventuale feedback per l'utente\n  */\n  upl.parse_max_filesize = (filesize_value, locales) =>  {\n    // controllo max_filesize ed elaborazione parametro\n    if( filesize_value ) {\n      var maxbytes, unit, feedback_size;\n\n      if(!isNaN(filesize_value)) { //solo numero, si assume siano KB\n        maxbytes = +filesize_value;\n        unit = 'KB';\n        feedback_size = maxbytes;\n\n      } else {\n\n        unit = filesize_value.substr(-2, 2).toUpperCase();\n        maxbytes = +filesize_value.substr(0, filesize_value.length-2);\n        feedback_size = maxbytes;\n\n        if(isNaN(maxbytes) || (unit !== 'KB' && unit !== 'MB') ) {\n          return false;\n        }\n      }\n\n      // se l'unità è indicata in KB ma il valore è più grande\n      // di un MB, il parametro viene aggiornato\n      if( maxbytes >= 1024 && unit === 'KB') {\n        unit = 'MB';\n        feedback_size = (Math.round((maxbytes / 1024) * 100) /100);\n      }\n\n      if(unit === 'KB') {\n        maxbytes = maxbytes * 1024;\n      } else {\n        maxbytes = maxbytes * 1024 * 1024;\n      }\n\n      return {\n        //'original_value': filesize_value,\n        //'unit'         : unit,\n        'maxbytes'     : maxbytes,\n        'feedback_size': feedback_size.toLocaleString(\n          locales, {maximumFractionDigits: (unit === 'KB'? 0 : 1)}\n        ) + '<span class=\"fupl-unit\">' + unit + '</span>'\n      };\n\n    } else {\n      return null;\n    }\n  };\n\n  return upl;\n\n})(FileUploader2 || {});\n"]}